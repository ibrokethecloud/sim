apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"management.cattle.io/scale-available":"2"},"name":"cattle-cluster-agent","namespace":"cattle-system"},"spec":{"selector":{"matchLabels":{"app":"cattle-cluster-agent"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":0},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"cattle-cluster-agent"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"node-role.kubernetes.io/controlplane","operator":"In","values":["true"]}]},"weight":100},{"preference":{"matchExpressions":[{"key":"node-role.kubernetes.io/control-plane","operator":"In","values":["true"]}]},"weight":100},{"preference":{"matchExpressions":[{"key":"node-role.kubernetes.io/master","operator":"In","values":["true"]}]},"weight":100},{"preference":{"matchExpressions":[{"key":"cattle.io/cluster-agent","operator":"In","values":["true"]}]},"weight":1}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/os","operator":"NotIn","values":["windows"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["cattle-cluster-agent"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"env":[{"name":"CATTLE_FEATURES","value":"embedded-cluster-api=false,fleet=false,monitoringv1=false,multi-cluster-management=false,multi-cluster-management-agent=true,provisioningv2=false,rke2=false"},{"name":"CATTLE_IS_RKE","value":"false"},{"name":"CATTLE_SERVER","value":"https://apac-demo.fremont.rancherlabs.com"},{"name":"CATTLE_CA_CHECKSUM","value":""},{"name":"CATTLE_CLUSTER","value":"true"},{"name":"CATTLE_K8S_MANAGED","value":"true"},{"name":"CATTLE_CLUSTER_REGISTRY","value":""},{"name":"CATTLE_SERVER_VERSION","value":"v2.6.3"},{"name":"CATTLE_INSTALL_UUID","value":"d070c887-6f42-4751-9030-eece95022b02"},{"name":"CATTLE_INGRESS_IP_DOMAIN","value":"sslip.io"}],"image":"rancher/rancher-agent:v2.6.3","imagePullPolicy":"IfNotPresent","name":"cluster-register","volumeMounts":[{"mountPath":"/cattle-credentials","name":"cattle-credentials","readOnly":true}]}],"serviceAccountName":"cattle","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/controlplane","value":"true"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Exists"}],"volumes":[{"name":"cattle-credentials","secret":{"defaultMode":320,"secretName":"cattle-credentials-a9d85c9"}}]}}}}
      management.cattle.io/scale-available: "2"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8RWXW/qOBD9L/OcQIBLP/KG2qiL2tKKQKXVVYUGZwLeOrbXdmhRxX9fOYHeQGl3u3dX9ykknjlzPHNmhldAzR/IWK4kxIBa2/aqAwE8cZlBDJekhVoXJB0EUJDDDB1C/AoopXLouJLWvxYocUHersXQOUEtrtqWoaAQV8gFzgVBDF0IQM3/IOYsuZbhqmHNfTwmSuvIhIYW3DpTBYBNAALnJKpIH7kv0S4hhj5i1sGoH2UsOzmnsyjPejnOO52Tfh+jfrdz3j9j0Sl6UImFJ1VjhLvQuKhv60+tRtYwsWvrqPCuVhPzbCwJYk6ZOgeOLW/eiKLWH4FvPIK/HS3W3tQoIbhcTHWGjmqol7Q0C4K4E/iXqWxkMdoE4Nba8xrvOfrvVGixA2mUS/xjWtuLYZ5zyV1FT6qMBo13bSgnYyi7LA2Xi5QtKSs9j+FCqrfPyQuxsqpf/H3nQ5LRW6qSF23I2lpC31/hidYQV8FCowS1nso5GUmOrK8vU9IZJbRASV5FmgxWiYehhABWKEryOOBMSfC4edwE8Ex8sXQQd6JoE/x3HMJfSqJAX7L/O/qPxjrsi6+F3TwGYOjPkn9BLrXi0m1rTcgUNbNP6M7J4UGelN0nO1LugO8zl5l6thXlRy9+rbKBdPynta6yHYQn/9Z/6eGwOH4X36Gfpflo79Zpd0oroRbr6wpoPx9LZV018Q5UUd3cKxu5JFMTIbmqntsJeTGYTG6S2TCdja+THReIIUdhPd6hYZqMH5Jxw3DpnLZxu40aWZhRoVq5oUJJ1zIo2ZKMwLltMVUcAbsYzC5+Sy6u0+ltA/GY4c00neyFrQT53vD6LJ3dDkaDq+Ty7423qLNxcjVMJ+PfP+dQ33z2kIzT4d2oYbvqtk5avSMew1E6GdzczKbTYZNNFp1G7OzsNDzJv3XDb6f9Tnge9aKQiNF5P+p251H3KNrVOEnT2fB+dnl3Oxg2KVgruG5xBb4neYF+vcA2/+3ts1ZTvGW7NbsvhbhXgjMvqmE+Uu7ekP2xJd/t7Wo8rZQoC7pVpXTb9vU/79H5Nd3eidhQRtJxFBbeLeS9M0OY3UmxhtgXyndsAJbMijMaMOahR01v8M0gyOz+onhR5zkxV02CbRt7qy9tnXda+QnMY1skeeHW2X+NfGw17CAfdxWxzc4+mmpLzJDzUyqjHEvhblVGEPe60e5s9JF32OtF/VM8h42fK5vNXwEAAP//yPr6oGAKAAA
      objectset.rio.cattle.io/id: cluster-registration
    creationTimestamp: "2022-03-07T22:15:33Z"
    generation: 4
    labels:
      objectset.rio.cattle.io/hash: 5aad1a050dcd69e80fd3fab11655a0521958c07a
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:management.cattle.io/scale-available: {}
            f:objectset.rio.cattle.io/applied: {}
            f:objectset.rio.cattle.io/id: {}
          f:labels:
            .: {}
            f:objectset.rio.cattle.io/hash: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution:
                    .: {}
                    f:nodeSelectorTerms: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"cluster-register"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"CATTLE_CA_CHECKSUM"}:
                      .: {}
                      f:name: {}
                    k:{"name":"CATTLE_CLUSTER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CATTLE_CLUSTER_REGISTRY"}:
                      .: {}
                      f:name: {}
                    k:{"name":"CATTLE_INGRESS_IP_DOMAIN"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CATTLE_INSTALL_UUID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CATTLE_IS_RKE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CATTLE_K8S_MANAGED"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CATTLE_SERVER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CATTLE_SERVER_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/cattle-credentials"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"cattle-credentials"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
      manager: harvester
      operation: Update
      time: "2022-03-07T22:15:33Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:replicas: {}
      manager: rancher
      operation: Update
      time: "2022-03-07T22:15:33Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"cluster-register"}:
                  f:env:
                    k:{"name":"CATTLE_FEATURES"}:
                      .: {}
                      f:name: {}
                      f:value: {}
              f:volumes:
                k:{"name":"cattle-credentials"}:
                  f:secret:
                    f:secretName: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2022-03-07T22:16:20Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-08T00:12:32Z"
    name: cattle-cluster-agent
    namespace: cattle-system
    resourceVersion: "1025119"
    uid: bb425fdd-e56f-4ce0-af03-7991dbda5fbd
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: cattle-cluster-agent
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: "null"
        labels:
          app: cattle-cluster-agent
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/controlplane
                  operator: In
                  values:
                  - "true"
              weight: 100
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: In
                  values:
                  - "true"
              weight: 100
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: In
                  values:
                  - "true"
              weight: 100
            - preference:
                matchExpressions:
                - key: cattle.io/cluster-agent
                  operator: In
                  values:
                  - "true"
              weight: 1
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/os
                  operator: NotIn
                  values:
                  - windows
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - cattle-cluster-agent
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: CATTLE_FEATURES
            value: embedded-cluster-api=false,fleet=false,monitoringv1=false,multi-cluster-management=false,multi-cluster-management-agent=true,provisioningv2=false,rke2=false
          - name: CATTLE_IS_RKE
            value: "false"
          - name: CATTLE_SERVER
            value: https://apac-demo.fremont.rancherlabs.com
          - name: CATTLE_CA_CHECKSUM
          - name: CATTLE_CLUSTER
            value: "true"
          - name: CATTLE_K8S_MANAGED
            value: "true"
          - name: CATTLE_CLUSTER_REGISTRY
          - name: CATTLE_SERVER_VERSION
            value: v2.6.3
          - name: CATTLE_INSTALL_UUID
            value: d070c887-6f42-4751-9030-eece95022b02
          - name: CATTLE_INGRESS_IP_DOMAIN
            value: sslip.io
          image: rancher/rancher-agent:v2.6.3
          imagePullPolicy: IfNotPresent
          name: cluster-register
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /cattle-credentials
            name: cattle-credentials
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cattle
        serviceAccountName: cattle
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/controlplane
          value: "true"
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - name: cattle-credentials
          secret:
            defaultMode: 320
            secretName: cattle-credentials-a9d85c9
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-03-07T22:15:33Z"
      lastUpdateTime: "2022-03-07T22:17:26Z"
      message: ReplicaSet "cattle-cluster-agent-6df46b7b5c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-03-08T00:12:32Z"
      lastUpdateTime: "2022-03-08T00:12:32Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 4
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"harvester-cluster-repo","namespace":"cattle-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"harvester-cluster-repo"}},"template":{"metadata":{"labels":{"app":"harvester-cluster-repo"}},"spec":{"containers":[{"image":"gmehta3/harvester-cluster-repo:ada3f1a-dirty","name":"httpd","ports":[{"containerPort":80}]}]}}}}
    creationTimestamp: "2022-03-06T22:49:40Z"
    generation: 1
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"httpd"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":80,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2022-03-06T22:49:40Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:49:53Z"
    name: harvester-cluster-repo
    namespace: cattle-system
    resourceVersion: "2495"
    uid: 5958782c-47a9-4447-b627-9553931ccb64
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: harvester-cluster-repo
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: "null"
        labels:
          app: harvester-cluster-repo
      spec:
        containers:
        - image: gmehta3/harvester-cluster-repo:ada3f1a-dirty
          imagePullPolicy: IfNotPresent
          name: httpd
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-03-06T22:49:53Z"
      lastUpdateTime: "2022-03-06T22:49:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-03-06T22:49:40Z"
      lastUpdateTime: "2022-03-06T22:49:53Z"
      message: ReplicaSet "harvester-cluster-repo-54b6486849" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      management.cattle.io/scale-available: "2"
      meta.helm.sh/release-name: rancher
      meta.helm.sh/release-namespace: cattle-system
    creationTimestamp: "2022-03-06T22:47:05Z"
    generation: 4
    labels:
      app: rancher
      app.kubernetes.io/managed-by: Helm
      chart: rancher-2.6.3
      heritage: Helm
      release: rancher
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:management.cattle.io/scale-available: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/managed-by: {}
            f:chart: {}
            f:heritage: {}
            f:release: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:release: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution:
                    .: {}
                    f:nodeSelectorTerms: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"rancher"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"CATTLE_BOOTSTRAP_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef:
                          .: {}
                          f:key: {}
                          f:name: {}
                    k:{"name":"CATTLE_FEATURES"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CATTLE_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CATTLE_PEER_SERVICE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CATTLE_SYSTEM_CATALOG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":80,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                    k:{"containerPort":444,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:hostPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
      manager: helm
      operation: Update
      time: "2022-03-06T22:47:05Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:harvesterhci.io/timestamp: {}
      manager: harvester
      operation: Update
      time: "2022-03-06T22:53:28Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:replicas: {}
      manager: rancher
      operation: Update
      time: "2022-03-07T22:11:31Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-08T00:13:41Z"
    name: rancher
    namespace: cattle-system
    resourceVersion: "1025078"
    uid: c6b3ea37-2f06-4892-9801-8c6e6a58e407
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: rancher
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          harvesterhci.io/timestamp: "2022-03-06T22:53:28Z"
        creationTimestamp: "null"
        labels:
          app: rancher
          release: rancher
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: NotIn
                  values:
                  - windows
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - rancher
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --no-cacerts
          - --http-listen-port=80
          - --https-listen-port=443
          - --add-local=true
          env:
          - name: CATTLE_NAMESPACE
            value: cattle-system
          - name: CATTLE_PEER_SERVICE
            value: rancher
          - name: CATTLE_FEATURES
            value: multi-cluster-management=false,multi-cluster-management-agent=false
          - name: CATTLE_SYSTEM_CATALOG
            value: bundled
          - name: CATTLE_BOOTSTRAP_PASSWORD
            valueFrom:
              secretKeyRef:
                key: bootstrapPassword
                name: bootstrap-secret
          image: rancher/rancher:v2.6.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 80
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: rancher
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 444
            hostPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: rancher
        serviceAccountName: rancher
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: cattle.io/os
          operator: Equal
          value: linux
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-03-06T22:47:09Z"
      lastUpdateTime: "2022-03-06T22:47:09Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-03-06T22:47:09Z"
      lastUpdateTime: "2022-03-06T22:54:41Z"
      message: ReplicaSet "rancher-775b48bfd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 4
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: rancher-webhook
      meta.helm.sh/release-namespace: cattle-system
    creationTimestamp: "2022-03-06T22:49:30Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"rancher-webhook"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"ENABLE_CAPI"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"ENABLE_MCM"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"STAMP"}:
                      .: {}
                      f:name: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8777,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: helm
      operation: Update
      time: "2022-03-06T22:49:30Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:49:35Z"
    name: rancher-webhook
    namespace: cattle-system
    resourceVersion: "2115"
    uid: ac6176fc-e431-4261-b350-f6fefcd6d604
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: rancher-webhook
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: "null"
        labels:
          app: rancher-webhook
      spec:
        containers:
        - env:
          - name: STAMP
          - name: ENABLE_CAPI
            value: "true"
          - name: ENABLE_MCM
            value: "false"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: rancher/rancher-webhook:v0.2.2
          imagePullPolicy: IfNotPresent
          name: rancher-webhook
          ports:
          - containerPort: 9443
            name: https
            protocol: TCP
          - containerPort: 8777
            name: capi-https
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: rancher-webhook
        serviceAccountName: rancher-webhook
        terminationGracePeriodSeconds: 30
        volumes:
        - name: tls
          secret:
            defaultMode: 420
            secretName: rancher-webhook-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-03-06T22:49:35Z"
      lastUpdateTime: "2022-03-06T22:49:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-03-06T22:49:30Z"
      lastUpdateTime: "2022-03-06T22:49:35Z"
      message: ReplicaSet "rancher-webhook-7c9c5cc887" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: mcc-local-managed-system-upgrade-controller
      meta.helm.sh/release-namespace: cattle-system
      objectset.rio.cattle.io/id: default-mcc-local-managed-system-upgrade-controller-cattl-22df4
    creationTimestamp: "2022-03-06T22:49:44Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      objectset.rio.cattle.io/hash: c3e283a7665312fcf757879be5d5ebe042fba092
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:objectset.rio.cattle.io/id: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:objectset.rio.cattle.io/hash: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:upgrade.cattle.io/controller: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution:
                    .: {}
                    f:nodeSelectorTerms: {}
              f:containers:
                k:{"name":"system-upgrade-controller"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"SYSTEM_UPGRADE_CONTROLLER_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"SYSTEM_UPGRADE_CONTROLLER_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/ssl"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"etc-ssl"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: fleetagent
      operation: Update
      time: "2022-03-06T22:49:44Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:49:48Z"
    name: system-upgrade-controller
    namespace: cattle-system
    resourceVersion: "2388"
    uid: eb380c9e-0bda-4fce-8848-07be2fdf3b3e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        upgrade.cattle.io/controller: system-upgrade-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: "null"
        labels:
          upgrade.cattle.io/controller: system-upgrade-controller
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: In
                  values:
                  - "true"
              weight: 100
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: In
                  values:
                  - "true"
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: NotIn
                  values:
                  - windows
        containers:
        - env:
          - name: SYSTEM_UPGRADE_CONTROLLER_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['upgrade.cattle.io/controller']
          - name: SYSTEM_UPGRADE_CONTROLLER_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: system-upgrade-controller-config
          image: rancher/system-upgrade-controller:v0.8.1
          imagePullPolicy: IfNotPresent
          name: system-upgrade-controller
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/ssl
            name: etc-ssl
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: system-upgrade-controller
        serviceAccountName: system-upgrade-controller
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /etc/ssl
            type: Directory
          name: etc-ssl
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-03-06T22:49:48Z"
      lastUpdateTime: "2022-03-06T22:49:48Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-03-06T22:49:44Z"
      lastUpdateTime: "2022-03-06T22:49:48Z"
      message: ReplicaSet "system-upgrade-controller-5b6457d644" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: "14659029"
