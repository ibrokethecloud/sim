apiVersion: v1
items:
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          creationTimestamp: "null"
          labels:
            app.kubernetes.io/instance: harvester
            app.kubernetes.io/name: harvester-network-controller
        spec:
          containers:
          - args:
            - agent
            command:
            - harvester-network-controller
            env:
            - name: NODENAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            image: rancher/harvester-network-controller:master-head
            imagePullPolicy: IfNotPresent
            name: harvester-network
            resources:
              limits:
                cpu: 100m
                memory: 128Mi
              requests:
                cpu: 10m
                memory: 64Mi
            securityContext:
              privileged: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /dev
              name: dev
            - mountPath: /lib/modules
              name: modules
          dnsPolicy: ClusterFirst
          hostNetwork: true
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: harvester-network-controller
          serviceAccountName: harvester-network-controller
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master
          volumes:
          - hostPath:
              path: /dev
              type: "null"
            name: dev
          - hostPath:
              path: /lib/modules
              type: "null"
            name: modules
  kind: ControllerRevision
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: harvester
      meta.helm.sh/release-namespace: harvester-system
      objectset.rio.cattle.io/id: default-mcc-harvester-cattle-fleet-local-system
    creationTimestamp: "2022-03-06T22:50:37Z"
    labels:
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/name: harvester-network-controller
      controller-revision-hash: 785dbb7dc7
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data: {}
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:objectset.rio.cattle.io/id: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c41ee533-bb2f-4813-b772-c5e0d5c7b71a"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:revision: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:37Z"
    name: harvester-network-controller-785dbb7dc7
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: harvester-network-controller
      uid: c41ee533-bb2f-4813-b772-c5e0d5c7b71a
    resourceVersion: "3263"
    uid: c6de78ba-f18d-4eb8-b806-34e9a341b2fd
  revision: 1
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          creationTimestamp: "null"
          labels:
            app.kubernetes.io/instance: harvester
            app.kubernetes.io/name: harvester-node-disk-manager
        spec:
          containers:
          - command:
            - node-disk-manager
            env:
            - name: NDM_LABEL_FILTER
              value: COS_*,HARV_*
            - name: LONGHORN_NAMESPACE
              value: longhorn-system
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            image: rancher/harvester-node-disk-manager:master-head
            imagePullPolicy: IfNotPresent
            name: harvester-node-disk-manager
            resources: {}
            securityContext:
              privileged: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /host/proc
              name: host-proc
              readOnly: true
            - mountPath: /run/udev
              name: host-run-udev
              readOnly: true
            - mountPath: /dev
              name: host-dev
              readOnly: true
            - mountPath: /sys
              name: host-sys
              readOnly: true
          dnsPolicy: ClusterFirst
          hostNetwork: true
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: harvester-node-disk-manager
          serviceAccountName: harvester-node-disk-manager
          terminationGracePeriodSeconds: 30
          volumes:
          - hostPath:
              path: /proc
              type: Directory
            name: host-proc
          - hostPath:
              path: /run/udev
              type: Directory
            name: host-run-udev
          - hostPath:
              path: /dev
              type: Directory
            name: host-dev
          - hostPath:
              path: /sys
              type: Directory
            name: host-sys
  kind: ControllerRevision
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: harvester
      meta.helm.sh/release-namespace: harvester-system
      objectset.rio.cattle.io/id: default-mcc-harvester-cattle-fleet-local-system
    creationTimestamp: "2022-03-06T22:50:37Z"
    labels:
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/name: harvester-node-disk-manager
      controller-revision-hash: 65df46b8d9
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data: {}
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:objectset.rio.cattle.io/id: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e76d81b4-ba65-422b-8af8-45b67d73e4ba"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:revision: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:37Z"
    name: harvester-node-disk-manager-65df46b8d9
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: harvester-node-disk-manager
      uid: e76d81b4-ba65-422b-8af8-45b67d73e4ba
    resourceVersion: "3211"
    uid: 98c70207-a25f-4718-924f-ea0c439a6ad4
  revision: 1
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          creationTimestamp: "null"
          labels:
            app.kubernetes.io/instance: harvester
            app.kubernetes.io/name: kube-vip
        spec:
          containers:
          - args:
            - manager
            env:
            - name: cp_enable
              value: "false"
            - name: lb_enable
              value: "true"
            - name: lb_port
              value: "6443"
            - name: svc_enable
              value: "true"
            - name: vip_arp
              value: "true"
            - name: vip_cidr
              value: "32"
            - name: vip_interface
            - name: vip_leaderelection
              value: "false"
            image: plndr/kube-vip:main
            imagePullPolicy: IfNotPresent
            name: kube-vip
            resources: {}
            securityContext:
              capabilities:
                add:
                - NET_ADMIN
                - NET_RAW
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          hostNetwork: true
          nodeSelector:
            node-role.kubernetes.io/control-plane: "true"
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: kube-vip
          serviceAccountName: kube-vip
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
  kind: ControllerRevision
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: harvester
      meta.helm.sh/release-namespace: harvester-system
      objectset.rio.cattle.io/id: default-mcc-harvester-cattle-fleet-local-system
    creationTimestamp: "2022-03-06T22:50:37Z"
    labels:
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/name: kube-vip
      controller-revision-hash: b44496c5d
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data: {}
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:objectset.rio.cattle.io/id: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9d821a25-0d8a-4812-9b92-c1a3b1e5878d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:revision: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:37Z"
    name: kube-vip-b44496c5d
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-vip
      uid: 9d821a25-0d8a-4812-9b92-c1a3b1e5878d
    resourceVersion: "3247"
    uid: f423224c-1125-456b-9397-3d9270477ac7
  revision: 1
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          creationTimestamp: "null"
          labels:
            app.kubernetes.io/instance: harvester
            app.kubernetes.io/name: kube-vip-cloud-provider
        spec:
          containers:
          - command:
            - /kube-vip-cloud-provider
            - --leader-elect-resource-name=kube-vip-cloud-controller
            image: kubevip/kube-vip-cloud-provider:0.1
            imagePullPolicy: IfNotPresent
            name: kube-vip-cloud-provider
            resources: {}
            securityContext: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: kube-vip-cloud-provider
          serviceAccountName: kube-vip-cloud-provider
          terminationGracePeriodSeconds: 30
  kind: ControllerRevision
  metadata:
    annotations:
      meta.helm.sh/release-name: harvester
      meta.helm.sh/release-namespace: harvester-system
      objectset.rio.cattle.io/id: default-mcc-harvester-cattle-fleet-local-system
    creationTimestamp: "2022-03-06T22:50:38Z"
    labels:
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/name: kube-vip-cloud-provider
      controller.kubernetes.io/hash: 85c9c8bc
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data: {}
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:objectset.rio.cattle.io/id: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:controller.kubernetes.io/hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c72cd970-f9ec-4e71-abb5-48de616c1f52"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:revision: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:38Z"
    name: kube-vip-cloud-provider-85c9c8bc
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: kube-vip-cloud-provider
      uid: c72cd970-f9ec-4e71-abb5-48de616c1f52
    resourceVersion: "3319"
    uid: d234b12a-44fd-4614-9345-cb66ee01fe97
  revision: 1
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          annotations:
            kubevirt.io/install-strategy-identifier: d3df7f87ee723ed71ca49f6c5cab7566dd4dc500
            kubevirt.io/install-strategy-registry: registry.suse.com/suse/sles/15.3
            kubevirt.io/install-strategy-version: 0.45.0-8.4.3
            scheduler.alpha.kubernetes.io/critical-pod: "null"
          creationTimestamp: "null"
          labels:
            app.kubernetes.io/component: kubevirt
            app.kubernetes.io/managed-by: kubevirt-operator
            app.kubernetes.io/version: 0.45.0-8.4.3
            kubevirt.io: virt-handler
            prometheus.kubevirt.io: "null"
          name: virt-handler
        spec:
          containers:
          - command:
            - virt-handler
            - --port
            - "8443"
            - --hostname-override
            - $(NODE_NAME)
            - --pod-ip-address
            - $(MY_POD_IP)
            - --max-metric-requests
            - "3"
            - --console-server-port
            - "8186"
            - --graceful-shutdown-seconds
            - "315"
            - -v
            - "2"
            env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            image: registry.suse.com/suse/sles/15.3/virt-handler:0.45.0-8.4.3
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /healthz
                port: 8443
                scheme: HTTPS
              initialDelaySeconds: 15
              periodSeconds: 45
              successThreshold: 1
              timeoutSeconds: 10
            name: virt-handler
            ports:
            - containerPort: 8443
              name: metrics
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /healthz
                port: 8443
                scheme: HTTPS
              initialDelaySeconds: 15
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 10
            resources:
              requests:
                cpu: 10m
                memory: 230Mi
            securityContext:
              privileged: true
              seLinuxOptions:
                level: s0
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /etc/virt-handler/clientcertificates
              name: kubevirt-virt-handler-certs
              readOnly: true
            - mountPath: /etc/virt-handler/servercertificates
              name: kubevirt-virt-handler-server-certs
              readOnly: true
            - mountPath: /var/run/kubevirt-libvirt-runtimes
              name: libvirt-runtimes
            - mountPath: /var/run/kubevirt
              mountPropagation: Bidirectional
              name: virt-share-dir
            - mountPath: /var/lib/kubevirt
              name: virt-lib-dir
            - mountPath: /var/run/kubevirt-private
              name: virt-private-dir
            - mountPath: /var/lib/kubelet/device-plugins
              name: device-plugin
            - mountPath: /pods
              name: kubelet-pods-shortened
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: kubelet-pods
            - mountPath: /var/lib/kubevirt-node-labeller
              name: node-labeller
          dnsPolicy: ClusterFirst
          hostPID: true
          initContainers:
          - args:
            - node-labeller.sh
            command:
            - /bin/sh
            - -c
            image: registry.suse.com/suse/sles/15.3/virt-launcher:0.45.0-8.4.3
            imagePullPolicy: IfNotPresent
            name: virt-launcher
            resources: {}
            securityContext:
              privileged: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /var/lib/kubevirt-node-labeller
              name: node-labeller
          nodeSelector:
            kubernetes.io/os: linux
          priorityClassName: kubevirt-cluster-critical
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: kubevirt-handler
          serviceAccountName: kubevirt-handler
          terminationGracePeriodSeconds: 30
          tolerations:
          - key: CriticalAddonsOnly
            operator: Exists
          volumes:
          - name: kubevirt-virt-handler-certs
            secret:
              defaultMode: 420
              optional: true
              secretName: kubevirt-virt-handler-certs
          - name: kubevirt-virt-handler-server-certs
            secret:
              defaultMode: 420
              optional: true
              secretName: kubevirt-virt-handler-server-certs
          - hostPath:
              path: /var/run/kubevirt-libvirt-runtimes
              type: "null"
            name: libvirt-runtimes
          - hostPath:
              path: /var/run/kubevirt
              type: "null"
            name: virt-share-dir
          - hostPath:
              path: /var/lib/kubevirt
              type: "null"
            name: virt-lib-dir
          - hostPath:
              path: /var/run/kubevirt-private
              type: "null"
            name: virt-private-dir
          - hostPath:
              path: /var/lib/kubelet/device-plugins
              type: "null"
            name: device-plugin
          - hostPath:
              path: /var/lib/kubelet/pods
              type: "null"
            name: kubelet-pods-shortened
          - hostPath:
              path: /var/lib/kubelet/pods
              type: "null"
            name: kubelet-pods
          - hostPath:
              path: /var/lib/kubevirt-node-labeller
              type: "null"
            name: node-labeller
  kind: ControllerRevision
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubevirt.io/customizer-identifier: 0564c24f745ced6f94bf8fe15c474566be27acf3
      kubevirt.io/generation: "2"
      kubevirt.io/install-strategy-identifier: d3df7f87ee723ed71ca49f6c5cab7566dd4dc500
      kubevirt.io/install-strategy-registry: registry.suse.com/suse/sles/15.3
      kubevirt.io/install-strategy-version: 0.45.0-8.4.3
    creationTimestamp: "2022-03-06T22:53:26Z"
    labels:
      app.kubernetes.io/component: kubevirt
      app.kubernetes.io/managed-by: kubevirt-operator
      app.kubernetes.io/version: 0.45.0-8.4.3
      controller-revision-hash: 64b889bf7d
      kubevirt.io: virt-handler
      prometheus.kubevirt.io: "null"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data: {}
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:kubevirt.io/customizer-identifier: {}
            f:kubevirt.io/generation: {}
            f:kubevirt.io/install-strategy-identifier: {}
            f:kubevirt.io/install-strategy-registry: {}
            f:kubevirt.io/install-strategy-version: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:kubevirt.io: {}
            f:prometheus.kubevirt.io: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"97f28535-3e56-4fef-b7c5-056175956dc2"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:revision: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:53:26Z"
    name: virt-handler-64b889bf7d
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: virt-handler
      uid: 97f28535-3e56-4fef-b7c5-056175956dc2
    resourceVersion: "6270"
    uid: 15ca72a7-540b-4586-ab2b-98e1cab4cfc6
  revision: 1
kind: List
metadata:
  resourceVersion: "14659186"
