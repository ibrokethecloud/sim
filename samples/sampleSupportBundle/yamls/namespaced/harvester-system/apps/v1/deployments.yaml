apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      management.cattle.io/scale-available: "3"
      meta.helm.sh/release-name: harvester
      meta.helm.sh/release-namespace: harvester-system
      objectset.rio.cattle.io/id: default-mcc-harvester-cattle-fleet-local-system
    creationTimestamp: "2022-03-06T22:50:37Z"
    generation: 3
    labels:
      app.kubernetes.io/component: apiserver
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: harvester
      app.kubernetes.io/part-of: harvester
      app.kubernetes.io/version: 0.1.x
      helm.sh/chart: harvester-0.0.0-dev
      helm.sh/release: harvester
      objectset.rio.cattle.io/hash: e852fa897f5eae59a44b4bfe186aad80b10b94b3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:management.cattle.io/scale-available: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:objectset.rio.cattle.io/id: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:helm.sh/release: {}
            f:objectset.rio.cattle.io/hash: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:container.apparmor.security.beta.kubernetes.io/apiserver: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:helm.sh/release: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution:
                    .: {}
                    f:nodeSelectorTerms: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"apiserver"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"HARVESTER_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HARVESTER_SERVER_HTTP_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HARVESTER_SERVER_HTTPS_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HCI_MODE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"RANCHER_EMBEDDED"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":6060,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: fleetagent
      operation: Update
      time: "2022-03-06T22:50:37Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:replicas: {}
      manager: rancher
      operation: Update
      time: "2022-03-07T22:11:31Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-08T00:12:43Z"
    name: harvester
    namespace: harvester-system
    resourceVersion: "1025106"
    uid: 94683781-af37-4cce-b5d0-91dca38a4f7a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: apiserver
        app.kubernetes.io/name: harvester
        app.kubernetes.io/part-of: harvester
        helm.sh/release: harvester
    strategy:
      rollingUpdate:
        maxSurge: 2
        maxUnavailable: 2
      type: RollingUpdate
    template:
      metadata:
        annotations:
          container.apparmor.security.beta.kubernetes.io/apiserver: unconfined
        creationTimestamp: "null"
        labels:
          app.kubernetes.io/component: apiserver
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: harvester
          app.kubernetes.io/part-of: harvester
          app.kubernetes.io/version: 0.1.x
          helm.sh/chart: harvester-0.0.0-dev
          helm.sh/release: harvester
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/os
                  operator: In
                  values:
                  - linux
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - harvester
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - apiserver
                - key: app.kubernetes.io/version
                  operator: In
                  values:
                  - 0.1.x
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: HARVESTER_SERVER_HTTPS_PORT
            value: "8443"
          - name: HARVESTER_DEBUG
            value: "false"
          - name: HARVESTER_SERVER_HTTP_PORT
            value: "0"
          - name: HCI_MODE
            value: "true"
          - name: RANCHER_EMBEDDED
            value: "true"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: rancher/harvester:master-head
          imagePullPolicy: IfNotPresent
          name: apiserver
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          - containerPort: 6060
            name: profile
            protocol: TCP
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            capabilities:
              add:
              - SYS_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: harvester
        serviceAccountName: harvester
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-03-06T22:50:38Z"
      lastUpdateTime: "2022-03-06T22:50:38Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-03-06T22:50:38Z"
      lastUpdateTime: "2022-03-06T22:51:51Z"
      message: ReplicaSet "harvester-d544ddb6f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: harvester
      meta.helm.sh/release-namespace: harvester-system
      objectset.rio.cattle.io/id: default-mcc-harvester-cattle-fleet-local-system
    creationTimestamp: "2022-03-06T22:50:37Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: harvester-load-balancer
      app.kubernetes.io/version: v0.1.1
      helm.sh/chart: harvester-load-balancer-0.1.2
      objectset.rio.cattle.io/hash: e852fa897f5eae59a44b4bfe186aad80b10b94b3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:objectset.rio.cattle.io/id: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:objectset.rio.cattle.io/hash: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/name: {}
            f:spec:
              f:containers:
                k:{"name":"harvester-load-balancer"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: fleetagent
      operation: Update
      time: "2022-03-06T22:50:37Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:51:51Z"
    name: harvester-load-balancer
    namespace: harvester-system
    resourceVersion: "4218"
    uid: 9dffc88b-93f8-48bc-bc84-b834b9716324
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: harvester
        app.kubernetes.io/name: harvester-load-balancer
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: "null"
        labels:
          app.kubernetes.io/instance: harvester
          app.kubernetes.io/name: harvester-load-balancer
      spec:
        containers:
        - command:
          - harvester-load-balancer
          image: rancher/harvester-load-balancer:master-head
          imagePullPolicy: IfNotPresent
          name: harvester-load-balancer
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: harvester-load-balancer
        serviceAccountName: harvester-load-balancer
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-03-06T22:51:51Z"
      lastUpdateTime: "2022-03-06T22:51:51Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-03-06T22:50:37Z"
      lastUpdateTime: "2022-03-06T22:51:51Z"
      message: ReplicaSet "harvester-load-balancer-59bf75f489" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      management.cattle.io/scale-available: "2"
      meta.helm.sh/release-name: harvester
      meta.helm.sh/release-namespace: harvester-system
      objectset.rio.cattle.io/id: default-mcc-harvester-cattle-fleet-local-system
    creationTimestamp: "2022-03-06T22:50:37Z"
    generation: 3
    labels:
      app.kubernetes.io/component: network
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: harvester-network-controller-manager
      app.kubernetes.io/version: v0.2.6
      helm.sh/chart: harvester-network-controller-0.2.8
      objectset.rio.cattle.io/hash: e852fa897f5eae59a44b4bfe186aad80b10b94b3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:management.cattle.io/scale-available: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:objectset.rio.cattle.io/id: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:objectset.rio.cattle.io/hash: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/name: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution:
                    .: {}
                    f:nodeSelectorTerms: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"harvester-network-manager"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
      manager: fleetagent
      operation: Update
      time: "2022-03-06T22:50:37Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:replicas: {}
      manager: rancher
      operation: Update
      time: "2022-03-07T22:11:31Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-08T00:12:34Z"
    name: harvester-network-controller-manager
    namespace: harvester-system
    resourceVersion: "1025105"
    uid: 61447280-a03e-42b5-9dff-e73470f6666a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: harvester
        app.kubernetes.io/name: harvester-network-controller-manager
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: "null"
        labels:
          app.kubernetes.io/instance: harvester
          app.kubernetes.io/name: harvester-network-controller-manager
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/os
                  operator: In
                  values:
                  - linux
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - harvester-network-controller-manager
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - manager
          - --enable-vip-controller
          - --helper-image=rancher/harvester-network-helper:master-head
          command:
          - harvester-network-controller
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: rancher/harvester-network-controller:master-head
          imagePullPolicy: IfNotPresent
          name: harvester-network-manager
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: harvester-network-controller
        serviceAccountName: harvester-network-controller
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-03-06T22:50:37Z"
      lastUpdateTime: "2022-03-06T22:51:51Z"
      message: ReplicaSet "harvester-network-controller-manager-99677f8fd" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-03-08T00:12:34Z"
      lastUpdateTime: "2022-03-08T00:12:34Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      management.cattle.io/scale-available: "3"
      meta.helm.sh/release-name: harvester
      meta.helm.sh/release-namespace: harvester-system
      objectset.rio.cattle.io/id: default-mcc-harvester-cattle-fleet-local-system
    creationTimestamp: "2022-03-06T22:50:37Z"
    generation: 3
    labels:
      app.kubernetes.io/component: webhook-server
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: harvester-webhook
      app.kubernetes.io/part-of: harvester
      app.kubernetes.io/version: 0.1.x
      helm.sh/chart: harvester-0.0.0-dev
      helm.sh/release: harvester
      objectset.rio.cattle.io/hash: e852fa897f5eae59a44b4bfe186aad80b10b94b3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:management.cattle.io/scale-available: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:objectset.rio.cattle.io/id: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:helm.sh/release: {}
            f:objectset.rio.cattle.io/hash: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:container.apparmor.security.beta.kubernetes.io/harvester-webhook: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:helm.sh/release: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution:
                    .: {}
                    f:nodeSelectorTerms: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"harvester-webhook"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"HARVESTER_CONTROLLER_USER_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HARVESTER_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HARVESTER_WEBHOOK_SERVER_HTTPS_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: fleetagent
      operation: Update
      time: "2022-03-06T22:50:37Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:replicas: {}
      manager: rancher
      operation: Update
      time: "2022-03-07T22:11:31Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-08T00:12:43Z"
    name: harvester-webhook
    namespace: harvester-system
    resourceVersion: "1025118"
    uid: 18f37a88-7cb1-456c-86de-46a051b0d441
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: webhook-server
        app.kubernetes.io/name: harvester
        app.kubernetes.io/part-of: harvester
        helm.sh/release: harvester
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          container.apparmor.security.beta.kubernetes.io/harvester-webhook: unconfined
        creationTimestamp: "null"
        labels:
          app.kubernetes.io/component: webhook-server
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: harvester
          app.kubernetes.io/part-of: harvester
          app.kubernetes.io/version: 0.1.x
          helm.sh/chart: harvester-0.0.0-dev
          helm.sh/release: harvester
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/os
                  operator: In
                  values:
                  - linux
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - harvester
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - webhook-server
                - key: app.kubernetes.io/version
                  operator: In
                  values:
                  - 0.1.x
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: HARVESTER_WEBHOOK_SERVER_HTTPS_PORT
            value: "9443"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HARVESTER_DEBUG
            value: "false"
          - name: HARVESTER_CONTROLLER_USER_NAME
            value: system:serviceaccount:harvester-system:harvester
          image: rancher/harvester-webhook:master-head
          imagePullPolicy: IfNotPresent
          name: harvester-webhook
          ports:
          - containerPort: 9443
            name: https
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - SYS_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: harvester
        serviceAccountName: harvester
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-03-06T22:50:38Z"
      lastUpdateTime: "2022-03-06T22:51:51Z"
      message: ReplicaSet "harvester-webhook-67744f845f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-03-08T00:12:43Z"
      lastUpdateTime: "2022-03-08T00:12:43Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-03-22T23:49:13Z"
    generation: 1
    labels:
      app: support-bundle-manager
      rancher/supportbundle: bundle-o3n28
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:rancher/supportbundle: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"90ceec0e-2cd4-4233-86be-70b9da30d881"}:
              .: {}
              f:apiVersion: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:rancher/supportbundle: {}
            f:spec:
              f:containers:
                k:{"name":"manager"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"SUPPORT_BUNDLE_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SUPPORT_BUNDLE_EXCLUDE_RESOURCES"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SUPPORT_BUNDLE_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SUPPORT_BUNDLE_IMAGE_PULL_POLICY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SUPPORT_BUNDLE_MANAGER_POD_IP"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef:
                          .: {}
                          f:apiVersion: {}
                          f:fieldPath: {}
                    k:{"name":"SUPPORT_BUNDLE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SUPPORT_BUNDLE_NODE_SELECTOR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SUPPORT_BUNDLE_TARGET_NAMESPACES"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
      manager: harvester
      operation: Update
      time: "2022-03-22T23:49:13Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-22T23:49:33Z"
    name: supportbundle-manager-bundle-o3n28
    namespace: harvester-system
    ownerReferences:
    - apiVersion: harvesterhci.io/v1beta1
      kind: SupportBundle
      name: bundle-o3n28
      uid: 90ceec0e-2cd4-4233-86be-70b9da30d881
    resourceVersion: "14658880"
    uid: cafc50d3-e506-4ea1-af55-8784911510b7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: support-bundle-manager
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: "null"
        labels:
          app: support-bundle-manager
          rancher/supportbundle: bundle-o3n28
      spec:
        containers:
        - args:
          - /usr/bin/support-bundle-kit
          - manager
          env:
          - name: SUPPORT_BUNDLE_TARGET_NAMESPACES
            value: cattle-dashboards,cattle-fleet-clusters-system,cattle-monitoring-system,fleet-local,harvester-system,local,longhorn-system
          - name: SUPPORT_BUNDLE_NAME
            value: bundle-o3n28
          - name: SUPPORT_BUNDLE_DEBUG
            value: "true"
          - name: SUPPORT_BUNDLE_MANAGER_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: SUPPORT_BUNDLE_IMAGE
            value: rancher/support-bundle-kit:master-head
          - name: SUPPORT_BUNDLE_IMAGE_PULL_POLICY
            value: IfNotPresent
          - name: SUPPORT_BUNDLE_NODE_SELECTOR
            value: harvesterhci.io/managed=true
          - name: SUPPORT_BUNDLE_EXCLUDE_RESOURCES
            value: settings.harvesterhci.io,authconfigs.management.cattle.io,authtokens.management.cattle.io,samltokens.management.cattle.io,tokens.management.cattle.io,users.management.cattle.io
          image: rancher/support-bundle-kit:master-head
          imagePullPolicy: IfNotPresent
          name: manager
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: harvester
        serviceAccountName: harvester
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-03-22T23:49:33Z"
      lastUpdateTime: "2022-03-22T23:49:33Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-03-22T23:49:13Z"
      lastUpdateTime: "2022-03-22T23:49:33Z"
      message: ReplicaSet "supportbundle-manager-bundle-o3n28-7d6d44c544" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubevirt.io/customizer-identifier: 0564c24f745ced6f94bf8fe15c474566be27acf3
      kubevirt.io/generation: "2"
      kubevirt.io/install-strategy-identifier: d3df7f87ee723ed71ca49f6c5cab7566dd4dc500
      kubevirt.io/install-strategy-registry: registry.suse.com/suse/sles/15.3
      kubevirt.io/install-strategy-version: 0.45.0-8.4.3
    creationTimestamp: "2022-03-06T22:53:00Z"
    generation: 1
    labels:
      app.kubernetes.io/component: kubevirt
      app.kubernetes.io/managed-by: kubevirt-operator
      app.kubernetes.io/name: virt-api
      app.kubernetes.io/version: 0.45.0-8.4.3
      kubevirt.io: virt-api
    name: virt-api
    namespace: harvester-system
    resourceVersion: "6196"
    uid: 44db30cd-8446-4781-84d7-6137251e2161
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        kubevirt.io: virt-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubevirt.io/install-strategy-identifier: d3df7f87ee723ed71ca49f6c5cab7566dd4dc500
          kubevirt.io/install-strategy-registry: registry.suse.com/suse/sles/15.3
          kubevirt.io/install-strategy-version: 0.45.0-8.4.3
          scheduler.alpha.kubernetes.io/critical-pod: "null"
        creationTimestamp: "null"
        labels:
          app.kubernetes.io/component: kubevirt
          app.kubernetes.io/managed-by: kubevirt-operator
          app.kubernetes.io/version: 0.45.0-8.4.3
          kubevirt.io: virt-api
          prometheus.kubevirt.io: "null"
        name: virt-api
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: kubevirt.io
                    operator: In
                    values:
                    - virt-api
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - command:
          - virt-api
          - --port
          - "8443"
          - --console-server-port
          - "8186"
          - --subresources-only
          - -v
          - "2"
          image: registry.suse.com/suse/sles/15.3/virt-api:0.45.0-8.4.3
          imagePullPolicy: IfNotPresent
          name: virt-api
          ports:
          - containerPort: 8443
            name: virt-api
            protocol: TCP
          - containerPort: 8443
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /apis/subresources.kubevirt.io/v1/healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 5m
              memory: 150Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/virt-api/certificates
            name: kubevirt-virt-api-certs
            readOnly: true
          - mountPath: /etc/virt-handler/clientcertificates
            name: kubevirt-virt-handler-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: kubevirt-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
        serviceAccount: kubevirt-apiserver
        serviceAccountName: kubevirt-apiserver
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - name: kubevirt-virt-api-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: kubevirt-virt-api-certs
        - name: kubevirt-virt-handler-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: kubevirt-virt-handler-certs
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2022-03-06T22:53:20Z"
      lastUpdateTime: "2022-03-06T22:53:20Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-03-06T22:53:00Z"
      lastUpdateTime: "2022-03-06T22:53:20Z"
      message: ReplicaSet "virt-api-86455cdb7d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubevirt.io/customizer-identifier: 0564c24f745ced6f94bf8fe15c474566be27acf3
      kubevirt.io/generation: "2"
      kubevirt.io/install-strategy-identifier: d3df7f87ee723ed71ca49f6c5cab7566dd4dc500
      kubevirt.io/install-strategy-registry: registry.suse.com/suse/sles/15.3
      kubevirt.io/install-strategy-version: 0.45.0-8.4.3
    creationTimestamp: "2022-03-06T22:53:26Z"
    generation: 1
    labels:
      app.kubernetes.io/component: kubevirt
      app.kubernetes.io/managed-by: kubevirt-operator
      app.kubernetes.io/name: virt-controller
      app.kubernetes.io/version: 0.45.0-8.4.3
      kubevirt.io: virt-controller
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubevirt.io/customizer-identifier: {}
            f:kubevirt.io/generation: {}
            f:kubevirt.io/install-strategy-identifier: {}
            f:kubevirt.io/install-strategy-registry: {}
            f:kubevirt.io/install-strategy-version: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:kubevirt.io: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubevirt.io/install-strategy-identifier: {}
                f:kubevirt.io/install-strategy-registry: {}
                f:kubevirt.io/install-strategy-version: {}
                f:scheduler.alpha.kubernetes.io/critical-pod: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/version: {}
                f:kubevirt.io: {}
                f:prometheus.kubevirt.io: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"virt-controller"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/virt-controller/certificates"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:nodeSelector:
                .: {}
                f:kubernetes.io/os: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"kubevirt-controller-certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
      manager: virt-operator
      operation: Update
      time: "2022-03-06T22:53:26Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:53:56Z"
    name: virt-controller
    namespace: harvester-system
    resourceVersion: "6860"
    uid: 656ea8ca-4be2-42f3-87ac-3fd8aa390e4f
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        kubevirt.io: virt-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubevirt.io/install-strategy-identifier: d3df7f87ee723ed71ca49f6c5cab7566dd4dc500
          kubevirt.io/install-strategy-registry: registry.suse.com/suse/sles/15.3
          kubevirt.io/install-strategy-version: 0.45.0-8.4.3
          scheduler.alpha.kubernetes.io/critical-pod: "null"
        creationTimestamp: "null"
        labels:
          app.kubernetes.io/component: kubevirt
          app.kubernetes.io/managed-by: kubevirt-operator
          app.kubernetes.io/version: 0.45.0-8.4.3
          kubevirt.io: virt-controller
          prometheus.kubevirt.io: "null"
        name: virt-controller
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: kubevirt.io
                    operator: In
                    values:
                    - virt-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - command:
          - virt-controller
          - --launcher-image
          - registry.suse.com/suse/sles/15.3/virt-launcher:0.45.0-8.4.3
          - --port
          - "8443"
          - -v
          - "2"
          image: registry.suse.com/suse/sles/15.3/virt-controller:0.45.0-8.4.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: virt-controller
          ports:
          - containerPort: 8443
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /leader
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 10m
              memory: 150Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/virt-controller/certificates
            name: kubevirt-controller-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: kubevirt-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
        serviceAccount: kubevirt-controller
        serviceAccountName: kubevirt-controller
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - name: kubevirt-controller-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: kubevirt-controller-certs
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2022-03-06T22:53:56Z"
      lastUpdateTime: "2022-03-06T22:53:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-03-06T22:53:26Z"
      lastUpdateTime: "2022-03-06T22:53:56Z"
      message: ReplicaSet "virt-controller-5f649999dd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: harvester
      meta.helm.sh/release-namespace: harvester-system
      objectset.rio.cattle.io/id: default-mcc-harvester-cattle-fleet-local-system
    creationTimestamp: "2022-03-06T22:50:37Z"
    generation: 1
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: virt-operator
      app.kubernetes.io/part-of: kubevirt-operator
      app.kubernetes.io/version: 0.30.x
      helm.sh/chart: kubevirt-operator-0.1.0
      helm.sh/release: harvester
      kubevirt.io: virt-operator
      objectset.rio.cattle.io/hash: e852fa897f5eae59a44b4bfe186aad80b10b94b3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:objectset.rio.cattle.io/id: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:helm.sh/release: {}
            f:kubevirt.io: {}
            f:objectset.rio.cattle.io/hash: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
                f:helm.sh/release: {}
                f:kubevirt.io: {}
                f:prometheus.kubevirt.io: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution:
                    .: {}
                    f:nodeSelectorTerms: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"virt-operator"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"OPERATOR_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":8444,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/virt-operator/certificates"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"kubevirt-operator-certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
      manager: fleetagent
      operation: Update
      time: "2022-03-06T22:50:37Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:52:14Z"
    name: virt-operator
    namespace: harvester-system
    resourceVersion: "4899"
    uid: 18915031-671d-408c-98bb-8d640c3478d4
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: virt-operator
        app.kubernetes.io/part-of: kubevirt-operator
        helm.sh/release: harvester
        kubevirt.io: virt-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: "null"
        labels:
          app.kubernetes.io/component: operator
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: virt-operator
          app.kubernetes.io/part-of: kubevirt-operator
          app.kubernetes.io/version: 0.30.x
          helm.sh/chart: kubevirt-operator-0.1.0
          helm.sh/release: harvester
          kubevirt.io: virt-operator
          prometheus.kubevirt.io: "null"
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/os
                  operator: In
                  values:
                  - linux
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: kubevirt.io
                    operator: In
                    values:
                    - virt-operator
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - command:
          - virt-operator
          - --port
          - "8443"
          - -v
          - "2"
          env:
          - name: OPERATOR_IMAGE
            value: registry.suse.com/suse/sles/15.3/virt-operator:0.45.0-8.4.3
          image: registry.suse.com/suse/sles/15.3/virt-operator:0.45.0-8.4.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: virt-operator
          ports:
          - containerPort: 8443
            name: metrics
            protocol: TCP
          - containerPort: 8444
            name: webhooks
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/virt-operator/certificates
            name: kubevirt-operator-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: kubevirt-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
        serviceAccount: kubevirt-operator
        serviceAccountName: kubevirt-operator
        terminationGracePeriodSeconds: 30
        volumes:
        - name: kubevirt-operator-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: kubevirt-operator-certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-03-06T22:52:14Z"
      lastUpdateTime: "2022-03-06T22:52:14Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-03-06T22:50:38Z"
      lastUpdateTime: "2022-03-06T22:52:14Z"
      message: ReplicaSet "virt-operator-56c5bdc7b8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: "14659186"
