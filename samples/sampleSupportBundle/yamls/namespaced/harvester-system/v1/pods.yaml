apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 3bb0768ac51642472c42578ac0e3215637269e5e7c18ce40c4d2f3352dfc3c18
      cni.projectcalico.org/podIP: "null"
      cni.projectcalico.org/podIPs: "null"
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.89"
            ],
            "default": true,
            "dns": {}
        },{
            "name": "default/default",
            "interface": "net1",
            "mac": "ba:6a:0b:4b:62:10",
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks: '[{"name":"default","namespace":"default","interface":"net1","cni-args":null}]'
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.89"
            ],
            "default": true,
            "dns": {}
        },{
            "name": "default/default",
            "interface": "net1",
            "mac": "ba:6a:0b:4b:62:10",
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T23:10:38Z"
    generateName: default-default-
    labels:
      controller-uid: d995bf7d-d9d8-4645-81e2-48f8388dee2f
      job-name: default-default
    name: default-default-dng8k
    namespace: harvester-system
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: default-default
      uid: d995bf7d-d9d8-4645-81e2-48f8388dee2f
    resourceVersion: "17849"
    uid: 8d9b41d1-bae9-4c6a-a9f3-1ac57eb04c72
  spec:
    containers:
    - env:
      - name: NAD_NETWORKS
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['k8s.v1.cni.cncf.io/networks']
      - name: DHCP_SERVER
      image: rancher/harvester-network-helper:master-head
      imagePullPolicy: IfNotPresent
      name: network-helper
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-br22k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: harvester-network-helper
    serviceAccountName: harvester-network-helper
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-br22k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T23:10:38Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T23:10:48Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T23:10:48Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T23:10:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e26652bdb6557ae1591bde47114464f8074b02f4ad49499d6e5eb2b5eea5ac7e
      image: docker.io/rancher/harvester-network-helper:master-head
      imageID: docker.io/rancher/harvester-network-helper@sha256:a31e8fe3d86aeb1c9d9b08f4ea14fe49f8cd01b104a14e666e2829c79f350456
      lastState: {}
      name: network-helper
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e26652bdb6557ae1591bde47114464f8074b02f4ad49499d6e5eb2b5eea5ac7e
          exitCode: 0
          finishedAt: "2022-03-06T23:10:47Z"
          reason: Completed
          startedAt: "2022-03-06T23:10:46Z"
    hostIP: 172.16.132.182
    phase: Succeeded
    podIP: 10.52.0.89
    podIPs:
    - ip: 10.52.0.89
    qosClass: BestEffort
    startTime: "2022-03-06T23:10:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b1df072a21bee2ef80a884857fdf9e4e8f226b0c7ac8b21ccbb1f81f0bb3daaa
      cni.projectcalico.org/podIP: 10.52.0.38/32
      cni.projectcalico.org/podIPs: 10.52.0.38/32
      container.apparmor.security.beta.kubernetes.io/apiserver: unconfined
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.38"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.38"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:50:38Z"
    generateName: harvester-d544ddb6f-
    labels:
      app.kubernetes.io/component: apiserver
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: harvester
      app.kubernetes.io/part-of: harvester
      app.kubernetes.io/version: 0.1.x
      helm.sh/chart: harvester-0.0.0-dev
      helm.sh/release: harvester
      pod-template-hash: d544ddb6f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:container.apparmor.security.beta.kubernetes.io/apiserver: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:helm.sh/release: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2e19347f-a69d-48ae-82c5-210299e04211"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"apiserver"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"HARVESTER_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HARVESTER_SERVER_HTTP_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HARVESTER_SERVER_HTTPS_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HCI_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"RANCHER_EMBEDDED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6060,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:50:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:50:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.38"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:51:47Z"
    name: harvester-d544ddb6f-6g2fl
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: harvester-d544ddb6f
      uid: 2e19347f-a69d-48ae-82c5-210299e04211
    resourceVersion: "4096"
    uid: fd0be963-a9d7-43cc-ba33-755951faefaa
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: beta.kubernetes.io/os
              operator: In
              values:
              - linux
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - harvester
            - key: app.kubernetes.io/component
              operator: In
              values:
              - apiserver
            - key: app.kubernetes.io/version
              operator: In
              values:
              - 0.1.x
          topologyKey: kubernetes.io/hostname
    containers:
    - env:
      - name: HARVESTER_SERVER_HTTPS_PORT
        value: "8443"
      - name: HARVESTER_DEBUG
        value: "false"
      - name: HARVESTER_SERVER_HTTP_PORT
        value: "0"
      - name: HCI_MODE
        value: "true"
      - name: RANCHER_EMBEDDED
        value: "true"
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: rancher/harvester:master-head
      imagePullPolicy: IfNotPresent
      name: apiserver
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      - containerPort: 6060
        name: profile
        protocol: TCP
      resources:
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        capabilities:
          add:
          - SYS_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xjctt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: harvester
    serviceAccountName: harvester
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-xjctt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b15620538b138b23da5c0b24c99cb1d55c53cb351fd1c7a82451cd7224a57774
      image: docker.io/rancher/harvester:master-head
      imageID: docker.io/rancher/harvester@sha256:7e83c09ad5a0dc12d10e0616f34cd3fc91b996314c227de6db2165413f37cc3d
      lastState: {}
      name: apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:51:46Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.38
    podIPs:
    - ip: 10.52.0.38
    qosClass: Burstable
    startTime: "2022-03-06T22:50:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: c03663964b86aec9443cd1039757b6f72e248d4bb6cf2e0d4deb49c4ede4a4e7
      cni.projectcalico.org/podIP: 10.52.0.24/32
      cni.projectcalico.org/podIPs: 10.52.0.24/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.24"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.24"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:50:37Z"
    generateName: harvester-load-balancer-59bf75f489-
    labels:
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/name: harvester-load-balancer
      pod-template-hash: 59bf75f489
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9a87caaa-35a7-4f3a-8950-2d66f887e661"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"harvester-load-balancer"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:50:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:50:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.24"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:51:41Z"
    name: harvester-load-balancer-59bf75f489-9rk4j
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: harvester-load-balancer-59bf75f489
      uid: 9a87caaa-35a7-4f3a-8950-2d66f887e661
    resourceVersion: "4004"
    uid: c9c42a12-5e1f-4bdb-9022-3a9a656dd71d
  spec:
    containers:
    - command:
      - harvester-load-balancer
      image: rancher/harvester-load-balancer:master-head
      imagePullPolicy: IfNotPresent
      name: harvester-load-balancer
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tg68g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: harvester-load-balancer
    serviceAccountName: harvester-load-balancer
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-tg68g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://82dab4414edb5179c630fadbc233c182d600fd4cffbcfa8fb0735ec8cfd88fdb
      image: docker.io/rancher/harvester-load-balancer:master-head
      imageID: docker.io/rancher/harvester-load-balancer@sha256:48bf9ff2f071ff186f54b937bc8ec1d30675e5c8f7bad7ae1f6ccf5531dfd190
      lastState: {}
      name: harvester-load-balancer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:51:40Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.24
    podIPs:
    - ip: 10.52.0.24
    qosClass: BestEffort
    startTime: "2022-03-06T22:50:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:50:38Z"
    generateName: harvester-network-controller-
    labels:
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/name: harvester-network-controller
      controller-revision-hash: 785dbb7dc7
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c41ee533-bb2f-4813-b772-c5e0d5c7b71a"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
          f:containers:
            k:{"name":"harvester-network"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"NODENAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"dev"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:51:40Z"
    name: harvester-network-controller-jldp7
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: harvester-network-controller
      uid: c41ee533-bb2f-4813-b772-c5e0d5c7b71a
    resourceVersion: "3987"
    uid: 57a1a99b-1197-40d6-bcd2-5432b9258cdb
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - node1
    containers:
    - args:
      - agent
      command:
      - harvester-network-controller
      env:
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: rancher/harvester-network-controller:master-head
      imagePullPolicy: IfNotPresent
      name: harvester-network
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 64Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /dev
        name: dev
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7crq7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: harvester-network-controller
    serviceAccountName: harvester-network-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /dev
        type: "null"
      name: dev
    - hostPath:
        path: /lib/modules
        type: "null"
      name: modules
    - name: kube-api-access-7crq7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d0e97e2e98a2643255b6f65dcf49b9ff1de014886adde9154c99f807fe3b5607
      image: docker.io/rancher/harvester-network-controller:master-head
      imageID: docker.io/rancher/harvester-network-controller@sha256:a86d37149ce7c493831912de9ddc3366045d6bd37551f1eec9d5bc962826231c
      lastState: {}
      name: harvester-network
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:51:39Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: Burstable
    startTime: "2022-03-06T22:50:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:50:37Z"
    generateName: harvester-network-controller-manager-99677f8fd-
    labels:
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/name: harvester-network-controller-manager
      pod-template-hash: 99677f8fd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3091efa8-0838-448d-a048-7ed9b00c55fb"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"harvester-network-manager"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:51:40Z"
    name: harvester-network-controller-manager-99677f8fd-7p4wk
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: harvester-network-controller-manager-99677f8fd
      uid: 3091efa8-0838-448d-a048-7ed9b00c55fb
    resourceVersion: "3984"
    uid: 91f9606b-5adb-4d1e-9023-876167b57906
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: beta.kubernetes.io/os
              operator: In
              values:
              - linux
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - harvester-network-controller-manager
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - manager
      - --enable-vip-controller
      - --helper-image=rancher/harvester-network-helper:master-head
      command:
      - harvester-network-controller
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: rancher/harvester-network-controller:master-head
      imagePullPolicy: IfNotPresent
      name: harvester-network-manager
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 64Mi
      securityContext:
        capabilities:
          add:
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fc7qb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: harvester-network-controller
    serviceAccountName: harvester-network-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-fc7qb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8aaa1d5c25cce6cc094766d7fefc0daf86b2a312e78fba7380f9c4dd02a2582b
      image: docker.io/rancher/harvester-network-controller:master-head
      imageID: docker.io/rancher/harvester-network-controller@sha256:a86d37149ce7c493831912de9ddc3366045d6bd37551f1eec9d5bc962826231c
      lastState: {}
      name: harvester-network-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:51:39Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: Burstable
    startTime: "2022-03-06T22:50:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:50:37Z"
    generateName: harvester-node-disk-manager-
    labels:
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/name: harvester-node-disk-manager
      controller-revision-hash: 65df46b8d9
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e76d81b4-ba65-422b-8af8-45b67d73e4ba"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
          f:containers:
            k:{"name":"harvester-node-disk-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"LONGHORN_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NDM_LABEL_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/proc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/udev"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"host-dev"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-udev"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:51:41Z"
    name: harvester-node-disk-manager-tx686
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: harvester-node-disk-manager
      uid: e76d81b4-ba65-422b-8af8-45b67d73e4ba
    resourceVersion: "4003"
    uid: 816508c2-f254-4f79-9ab3-60b90caeacff
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - node1
    containers:
    - command:
      - node-disk-manager
      env:
      - name: NDM_LABEL_FILTER
        value: COS_*,HARV_*
      - name: LONGHORN_NAMESPACE
        value: longhorn-system
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: rancher/harvester-node-disk-manager:master-head
      imagePullPolicy: IfNotPresent
      name: harvester-node-disk-manager
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: host-proc
        readOnly: true
      - mountPath: /run/udev
        name: host-run-udev
        readOnly: true
      - mountPath: /dev
        name: host-dev
        readOnly: true
      - mountPath: /sys
        name: host-sys
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4rhxd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: harvester-node-disk-manager
    serviceAccountName: harvester-node-disk-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: Directory
      name: host-proc
    - hostPath:
        path: /run/udev
        type: Directory
      name: host-run-udev
    - hostPath:
        path: /dev
        type: Directory
      name: host-dev
    - hostPath:
        path: /sys
        type: Directory
      name: host-sys
    - name: kube-api-access-4rhxd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://007fd76d457717f3259005af4d6b3fc4e4359caadf44fd00a612651b2e1eefcf
      image: docker.io/rancher/harvester-node-disk-manager:master-head
      imageID: docker.io/rancher/harvester-node-disk-manager@sha256:28e0e702bbfbdea5f4a01fe25a937f86e6146cfba534717daac815f4238a51be
      lastState: {}
      name: harvester-node-disk-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:51:40Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: BestEffort
    startTime: "2022-03-06T22:50:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 31fd90a430e9dbffddee14c7706fb3640c33caa1326fa5d52844a9f26ee071c1
      cni.projectcalico.org/podIP: 10.52.0.26/32
      cni.projectcalico.org/podIPs: 10.52.0.26/32
      container.apparmor.security.beta.kubernetes.io/harvester-webhook: unconfined
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.26"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.26"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:50:38Z"
    generateName: harvester-webhook-67744f845f-
    labels:
      app.kubernetes.io/component: webhook-server
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: harvester
      app.kubernetes.io/part-of: harvester
      app.kubernetes.io/version: 0.1.x
      helm.sh/chart: harvester-0.0.0-dev
      helm.sh/release: harvester
      pod-template-hash: 67744f845f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:container.apparmor.security.beta.kubernetes.io/harvester-webhook: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:helm.sh/release: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"12166de7-172c-4cba-a8e3-1600ecb033f9"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"harvester-webhook"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"HARVESTER_CONTROLLER_USER_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HARVESTER_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HARVESTER_WEBHOOK_SERVER_HTTPS_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:50:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:50:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.26"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:51:46Z"
    name: harvester-webhook-67744f845f-5msj8
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: harvester-webhook-67744f845f
      uid: 12166de7-172c-4cba-a8e3-1600ecb033f9
    resourceVersion: "4073"
    uid: feb4b9e8-7f24-4fce-a106-2e57e147e4c1
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: beta.kubernetes.io/os
              operator: In
              values:
              - linux
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - harvester
            - key: app.kubernetes.io/component
              operator: In
              values:
              - webhook-server
            - key: app.kubernetes.io/version
              operator: In
              values:
              - 0.1.x
          topologyKey: kubernetes.io/hostname
    containers:
    - env:
      - name: HARVESTER_WEBHOOK_SERVER_HTTPS_PORT
        value: "9443"
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: HARVESTER_DEBUG
        value: "false"
      - name: HARVESTER_CONTROLLER_USER_NAME
        value: system:serviceaccount:harvester-system:harvester
      image: rancher/harvester-webhook:master-head
      imagePullPolicy: IfNotPresent
      name: harvester-webhook
      ports:
      - containerPort: 9443
        name: https
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - SYS_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-64q5z
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: harvester
    serviceAccountName: harvester
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-64q5z
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://79dc7b03617fa5178682ea10c8229da88a65c5b7dc923d99e9f437e7646e959f
      image: docker.io/rancher/harvester-webhook:master-head
      imageID: docker.io/rancher/harvester-webhook@sha256:7b470f130b87a1413c54d828dcf7252a7321ae533de1d35efff9ef5e644ac273
      lastState: {}
      name: harvester-webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:51:46Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.26
    podIPs:
    - ip: 10.52.0.26
    qosClass: BestEffort
    startTime: "2022-03-06T22:50:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: a9a6a1ab8990891b9a1545deb3acc2512d32edf2b48089ab739c43fe97c44c47
      cni.projectcalico.org/podIP: 10.52.0.39/32
      cni.projectcalico.org/podIPs: 10.52.0.39/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.39"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.39"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:50:38Z"
    generateName: kube-vip-cloud-provider-
    labels:
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/name: kube-vip-cloud-provider
      controller-revision-hash: kube-vip-cloud-provider-85c9c8bc
      statefulset.kubernetes.io/pod-name: kube-vip-cloud-provider-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c72cd970-f9ec-4e71-abb5-48de616c1f52"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"kube-vip-cloud-provider"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:50:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:50:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.39"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:51:32Z"
    name: kube-vip-cloud-provider-0
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: kube-vip-cloud-provider
      uid: c72cd970-f9ec-4e71-abb5-48de616c1f52
    resourceVersion: "3894"
    uid: 4aa0b8af-d6f4-4b2a-93d1-ffd9f3bf3c65
  spec:
    containers:
    - command:
      - /kube-vip-cloud-provider
      - --leader-elect-resource-name=kube-vip-cloud-controller
      image: kubevip/kube-vip-cloud-provider:0.1
      imagePullPolicy: IfNotPresent
      name: kube-vip-cloud-provider
      resources: {}
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jt4jb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: kube-vip-cloud-provider-0
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-vip-cloud-provider
    serviceAccountName: kube-vip-cloud-provider
    subdomain: kube-vip-cloud-provider
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jt4jb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8bb56a5eac6117a5f60a411c6912297e71c6e427cf845677c9cf74ae3335f9d9
      image: docker.io/kubevip/kube-vip-cloud-provider:0.1
      imageID: sha256:63fdd5f25e1d56894f13520a5a9c39d203f5ded06484cf10f37387f30db4db45
      lastState: {}
      name: kube-vip-cloud-provider
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:51:32Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.39
    podIPs:
    - ip: 10.52.0.39
    qosClass: BestEffort
    startTime: "2022-03-06T22:50:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:50:37Z"
    generateName: kube-vip-
    labels:
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/name: kube-vip
      controller-revision-hash: b44496c5d
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9d821a25-0d8a-4812-9b92-c1a3b1e5878d"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
          f:containers:
            k:{"name":"kube-vip"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"cp_enable"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"lb_enable"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"lb_port"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"svc_enable"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"vip_arp"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"vip_cidr"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"vip_interface"}:
                  .: {}
                  f:name: {}
                k:{"name":"vip_leaderelection"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector:
            .: {}
            f:node-role.kubernetes.io/control-plane: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-08T04:52:06Z"
    name: kube-vip-vchbv
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-vip
      uid: 9d821a25-0d8a-4812-9b92-c1a3b1e5878d
    resourceVersion: "1209597"
    uid: 5e5f713f-71cf-4729-af27-e00ee624d12c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - node1
    containers:
    - args:
      - manager
      env:
      - name: cp_enable
        value: "false"
      - name: lb_enable
        value: "true"
      - name: lb_port
        value: "6443"
      - name: svc_enable
        value: "true"
      - name: vip_arp
        value: "true"
      - name: vip_cidr
        value: "32"
      - name: vip_interface
      - name: vip_leaderelection
        value: "false"
      image: plndr/kube-vip:main
      imagePullPolicy: IfNotPresent
      name: kube-vip
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9tggc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    nodeSelector:
      node-role.kubernetes.io/control-plane: "true"
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-vip
    serviceAccountName: kube-vip
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: kube-api-access-9tggc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-08T04:52:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-08T04:52:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f91acb149a92501b784a8009e58d708db54e74214e782a73f1eb8392097db39e
      image: docker.io/plndr/kube-vip:main
      imageID: docker.io/plndr/kube-vip@sha256:bc9f2da2b5919321499d60e00fcc3e6029d0d4b0f23451b16b89eed3eb0191de
      lastState:
        terminated:
          containerID: containerd://29e38a9eb52dd09cd08a772f3e0475ff913f60d2da29fe7efaefd7768b9cea31
          exitCode: 1
          finishedAt: "2022-03-08T04:52:04Z"
          reason: Error
          startedAt: "2022-03-08T00:44:16Z"
      name: kube-vip
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2022-03-08T04:52:06Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: BestEffort
    startTime: "2022-03-06T22:50:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b7bc802ed6ca27afd7f9117eeaae9331359fe4fda8e95199a07bbe6e141182c2
      cni.projectcalico.org/podIP: 10.52.0.188/32
      cni.projectcalico.org/podIPs: 10.52.0.188/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.188"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.188"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-22T23:49:14Z"
    generateName: supportbundle-manager-bundle-o3n28-7d6d44c544-
    labels:
      app: support-bundle-manager
      pod-template-hash: 7d6d44c544
      rancher/supportbundle: bundle-o3n28
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:rancher/supportbundle: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ec2abb8f-9e67-46e1-b6d0-f78cb55caf75"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"manager"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"SUPPORT_BUNDLE_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SUPPORT_BUNDLE_EXCLUDE_RESOURCES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SUPPORT_BUNDLE_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SUPPORT_BUNDLE_IMAGE_PULL_POLICY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SUPPORT_BUNDLE_MANAGER_POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"SUPPORT_BUNDLE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SUPPORT_BUNDLE_NODE_SELECTOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SUPPORT_BUNDLE_TARGET_NAMESPACES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-22T23:49:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-22T23:49:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-22T23:49:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.188"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-22T23:49:33Z"
    name: supportbundle-manager-bundle-o3n28-7d6d44c544-ndn25
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: supportbundle-manager-bundle-o3n28-7d6d44c544
      uid: ec2abb8f-9e67-46e1-b6d0-f78cb55caf75
    resourceVersion: "14658877"
    uid: cd74d46c-46a7-4f0d-a65c-1dab50cc6519
  spec:
    containers:
    - args:
      - /usr/bin/support-bundle-kit
      - manager
      env:
      - name: SUPPORT_BUNDLE_TARGET_NAMESPACES
        value: cattle-dashboards,cattle-fleet-clusters-system,cattle-monitoring-system,fleet-local,harvester-system,local,longhorn-system
      - name: SUPPORT_BUNDLE_NAME
        value: bundle-o3n28
      - name: SUPPORT_BUNDLE_DEBUG
        value: "true"
      - name: SUPPORT_BUNDLE_MANAGER_POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SUPPORT_BUNDLE_IMAGE
        value: rancher/support-bundle-kit:master-head
      - name: SUPPORT_BUNDLE_IMAGE_PULL_POLICY
        value: IfNotPresent
      - name: SUPPORT_BUNDLE_NODE_SELECTOR
        value: harvesterhci.io/managed=true
      - name: SUPPORT_BUNDLE_EXCLUDE_RESOURCES
        value: settings.harvesterhci.io,authconfigs.management.cattle.io,authtokens.management.cattle.io,samltokens.management.cattle.io,tokens.management.cattle.io,users.management.cattle.io
      image: rancher/support-bundle-kit:master-head
      imagePullPolicy: IfNotPresent
      name: manager
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j5sgh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: harvester
    serviceAccountName: harvester
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-j5sgh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-22T23:49:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-22T23:49:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-22T23:49:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-22T23:49:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7c344d79fb13fc1c18e5507a391d8c398a60017e99b5dda3da96bc35f30e885f
      image: docker.io/rancher/support-bundle-kit:master-head
      imageID: docker.io/rancher/support-bundle-kit@sha256:9008fd535bddd02d39e4037599f873248c8e29c04ed92444c85038c0ed37505d
      lastState: {}
      name: manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-22T23:49:32Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.188
    podIPs:
    - ip: 10.52.0.188
    qosClass: BestEffort
    startTime: "2022-03-22T23:49:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 939ea6ded8356fa931c45249a15fa741bed97be67315fabce6c539d4bbfaf16b
      cni.projectcalico.org/podIP: 10.52.0.67/32
      cni.projectcalico.org/podIPs: 10.52.0.67/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.67"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.67"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
      kubevirt.io/install-strategy-identifier: d3df7f87ee723ed71ca49f6c5cab7566dd4dc500
      kubevirt.io/install-strategy-registry: registry.suse.com/suse/sles/15.3
      kubevirt.io/install-strategy-version: 0.45.0-8.4.3
      scheduler.alpha.kubernetes.io/critical-pod: "null"
    creationTimestamp: "2022-03-06T22:53:00Z"
    generateName: virt-api-86455cdb7d-
    labels:
      app.kubernetes.io/component: kubevirt
      app.kubernetes.io/managed-by: kubevirt-operator
      app.kubernetes.io/version: 0.45.0-8.4.3
      kubevirt.io: virt-api
      pod-template-hash: 86455cdb7d
      prometheus.kubevirt.io: "null"
    name: virt-api-86455cdb7d-khcv5
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: virt-api-86455cdb7d
      uid: 47d85d61-1f7e-46a0-a90e-3eb7a7e671e9
    resourceVersion: "6181"
    uid: 326c914e-4e0d-461b-b3fc-87af92bafd1f
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: kubevirt.io
                operator: In
                values:
                - virt-api
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - command:
      - virt-api
      - --port
      - "8443"
      - --console-server-port
      - "8186"
      - --subresources-only
      - -v
      - "2"
      image: registry.suse.com/suse/sles/15.3/virt-api:0.45.0-8.4.3
      imagePullPolicy: IfNotPresent
      name: virt-api
      ports:
      - containerPort: 8443
        name: virt-api
        protocol: TCP
      - containerPort: 8443
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /apis/subresources.kubevirt.io/v1/healthz
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 5m
          memory: 150Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/virt-api/certificates
        name: kubevirt-virt-api-certs
        readOnly: true
      - mountPath: /etc/virt-handler/clientcertificates
        name: kubevirt-virt-handler-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5rdz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1e+09
    priorityClassName: kubevirt-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
    serviceAccount: kubevirt-apiserver
    serviceAccountName: kubevirt-apiserver
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubevirt-virt-api-certs
      secret:
        defaultMode: 420
        optional: true
        secretName: kubevirt-virt-api-certs
    - name: kubevirt-virt-handler-certs
      secret:
        defaultMode: 420
        optional: true
        secretName: kubevirt-virt-handler-certs
    - name: kube-api-access-5rdz5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0e8f006e461eb971d3e7850dd872ae084348d8ac655a342d8870a5000263e048
      image: registry.suse.com/suse/sles/15.3/virt-api:0.45.0-8.4.3
      imageID: sha256:42db6d2ef5c12a857b0378724c9812f4cc2b281ca81473cf773c2cf998c9b0db
      lastState: {}
      name: virt-api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:53:04Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.67
    podIPs:
    - ip: 10.52.0.67
    qosClass: Burstable
    startTime: "2022-03-06T22:53:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 5e7cbb7a92c7c5f982191ebce357138cadbb702cc6befe0c1bbef91b524b88f0
      cni.projectcalico.org/podIP: 10.52.0.66/32
      cni.projectcalico.org/podIPs: 10.52.0.66/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.66"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.66"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
      kubevirt.io/install-strategy-identifier: d3df7f87ee723ed71ca49f6c5cab7566dd4dc500
      kubevirt.io/install-strategy-registry: registry.suse.com/suse/sles/15.3
      kubevirt.io/install-strategy-version: 0.45.0-8.4.3
      scheduler.alpha.kubernetes.io/critical-pod: "null"
    creationTimestamp: "2022-03-06T22:53:00Z"
    generateName: virt-api-86455cdb7d-
    labels:
      app.kubernetes.io/component: kubevirt
      app.kubernetes.io/managed-by: kubevirt-operator
      app.kubernetes.io/version: 0.45.0-8.4.3
      kubevirt.io: virt-api
      pod-template-hash: 86455cdb7d
      prometheus.kubevirt.io: "null"
    name: virt-api-86455cdb7d-mdk4m
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: virt-api-86455cdb7d
      uid: 47d85d61-1f7e-46a0-a90e-3eb7a7e671e9
    resourceVersion: "6189"
    uid: 7a98124d-1ba4-4711-a391-7225c655f9f2
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: kubevirt.io
                operator: In
                values:
                - virt-api
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - command:
      - virt-api
      - --port
      - "8443"
      - --console-server-port
      - "8186"
      - --subresources-only
      - -v
      - "2"
      image: registry.suse.com/suse/sles/15.3/virt-api:0.45.0-8.4.3
      imagePullPolicy: IfNotPresent
      name: virt-api
      ports:
      - containerPort: 8443
        name: virt-api
        protocol: TCP
      - containerPort: 8443
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /apis/subresources.kubevirt.io/v1/healthz
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 5m
          memory: 150Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/virt-api/certificates
        name: kubevirt-virt-api-certs
        readOnly: true
      - mountPath: /etc/virt-handler/clientcertificates
        name: kubevirt-virt-handler-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qx72r
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1e+09
    priorityClassName: kubevirt-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
    serviceAccount: kubevirt-apiserver
    serviceAccountName: kubevirt-apiserver
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubevirt-virt-api-certs
      secret:
        defaultMode: 420
        optional: true
        secretName: kubevirt-virt-api-certs
    - name: kubevirt-virt-handler-certs
      secret:
        defaultMode: 420
        optional: true
        secretName: kubevirt-virt-handler-certs
    - name: kube-api-access-qx72r
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6acda70479208a873f129c5eec26ea8885b8c723aea1da99be8bc3335580781f
      image: registry.suse.com/suse/sles/15.3/virt-api:0.45.0-8.4.3
      imageID: sha256:42db6d2ef5c12a857b0378724c9812f4cc2b281ca81473cf773c2cf998c9b0db
      lastState: {}
      name: virt-api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:53:05Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.66
    podIPs:
    - ip: 10.52.0.66
    qosClass: Burstable
    startTime: "2022-03-06T22:53:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 7908bf109a66129a37b539d2abcf6490fcfe2ea1feea1fd8ddc283ce57efbf4b
      cni.projectcalico.org/podIP: 10.52.0.72/32
      cni.projectcalico.org/podIPs: 10.52.0.72/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.72"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.72"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
      kubevirt.io/install-strategy-identifier: d3df7f87ee723ed71ca49f6c5cab7566dd4dc500
      kubevirt.io/install-strategy-registry: registry.suse.com/suse/sles/15.3
      kubevirt.io/install-strategy-version: 0.45.0-8.4.3
      scheduler.alpha.kubernetes.io/critical-pod: "null"
    creationTimestamp: "2022-03-06T22:53:26Z"
    generateName: virt-controller-5f649999dd-
    labels:
      app.kubernetes.io/component: kubevirt
      app.kubernetes.io/managed-by: kubevirt-operator
      app.kubernetes.io/version: 0.45.0-8.4.3
      kubevirt.io: virt-controller
      pod-template-hash: 5f649999dd
      prometheus.kubevirt.io: "null"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubevirt.io/install-strategy-identifier: {}
            f:kubevirt.io/install-strategy-registry: {}
            f:kubevirt.io/install-strategy-version: {}
            f:scheduler.alpha.kubernetes.io/critical-pod: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/version: {}
            f:kubevirt.io: {}
            f:pod-template-hash: {}
            f:prometheus.kubevirt.io: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1591ee4a-2e65-4da0-b023-92425720120e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"virt-controller"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/virt-controller/certificates"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kubevirt-controller-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:53:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:53:29Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:53:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.72"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:53:56Z"
    name: virt-controller-5f649999dd-5lw26
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: virt-controller-5f649999dd
      uid: 1591ee4a-2e65-4da0-b023-92425720120e
    resourceVersion: "6853"
    uid: 222e8519-621a-4c66-9cff-5e6ea45d012c
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: kubevirt.io
                operator: In
                values:
                - virt-controller
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - command:
      - virt-controller
      - --launcher-image
      - registry.suse.com/suse/sles/15.3/virt-launcher:0.45.0-8.4.3
      - --port
      - "8443"
      - -v
      - "2"
      image: registry.suse.com/suse/sles/15.3/virt-controller:0.45.0-8.4.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          path: /healthz
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: virt-controller
      ports:
      - containerPort: 8443
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /leader
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 10m
          memory: 150Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/virt-controller/certificates
        name: kubevirt-controller-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2d5xw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1e+09
    priorityClassName: kubevirt-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
    serviceAccount: kubevirt-controller
    serviceAccountName: kubevirt-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubevirt-controller-certs
      secret:
        defaultMode: 420
        optional: true
        secretName: kubevirt-controller-certs
    - name: kube-api-access-2d5xw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c3aaf25104e40126cebade235881414634d69edb3038445929ce33fd21bfbdad
      image: registry.suse.com/suse/sles/15.3/virt-controller:0.45.0-8.4.3
      imageID: sha256:2536d353d5c418addea950abbeb54d4d5ca4205f5fa7660abcc64de10bd70652
      lastState: {}
      name: virt-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:53:34Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.72
    podIPs:
    - ip: 10.52.0.72
    qosClass: Burstable
    startTime: "2022-03-06T22:53:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: ee22788531bcfa05f9d5cb68e7457d183a7275d22d6abd9eeaffe86bef557d56
      cni.projectcalico.org/podIP: 10.52.0.71/32
      cni.projectcalico.org/podIPs: 10.52.0.71/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.71"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.71"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
      kubevirt.io/install-strategy-identifier: d3df7f87ee723ed71ca49f6c5cab7566dd4dc500
      kubevirt.io/install-strategy-registry: registry.suse.com/suse/sles/15.3
      kubevirt.io/install-strategy-version: 0.45.0-8.4.3
      scheduler.alpha.kubernetes.io/critical-pod: "null"
    creationTimestamp: "2022-03-06T22:53:26Z"
    generateName: virt-controller-5f649999dd-
    labels:
      app.kubernetes.io/component: kubevirt
      app.kubernetes.io/managed-by: kubevirt-operator
      app.kubernetes.io/version: 0.45.0-8.4.3
      kubevirt.io: virt-controller
      pod-template-hash: 5f649999dd
      prometheus.kubevirt.io: "null"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubevirt.io/install-strategy-identifier: {}
            f:kubevirt.io/install-strategy-registry: {}
            f:kubevirt.io/install-strategy-version: {}
            f:scheduler.alpha.kubernetes.io/critical-pod: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/version: {}
            f:kubevirt.io: {}
            f:pod-template-hash: {}
            f:prometheus.kubevirt.io: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1591ee4a-2e65-4da0-b023-92425720120e"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"virt-controller"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/virt-controller/certificates"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kubevirt-controller-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:53:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:53:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:53:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.71"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:53:56Z"
    name: virt-controller-5f649999dd-j5qpd
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: virt-controller-5f649999dd
      uid: 1591ee4a-2e65-4da0-b023-92425720120e
    resourceVersion: "6847"
    uid: 76c4f877-c8cd-4925-9145-fb8b8f365d9a
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: kubevirt.io
                operator: In
                values:
                - virt-controller
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - command:
      - virt-controller
      - --launcher-image
      - registry.suse.com/suse/sles/15.3/virt-launcher:0.45.0-8.4.3
      - --port
      - "8443"
      - -v
      - "2"
      image: registry.suse.com/suse/sles/15.3/virt-controller:0.45.0-8.4.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          path: /healthz
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: virt-controller
      ports:
      - containerPort: 8443
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /leader
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 10m
          memory: 150Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/virt-controller/certificates
        name: kubevirt-controller-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4vgpb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1e+09
    priorityClassName: kubevirt-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
    serviceAccount: kubevirt-controller
    serviceAccountName: kubevirt-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubevirt-controller-certs
      secret:
        defaultMode: 420
        optional: true
        secretName: kubevirt-controller-certs
    - name: kube-api-access-4vgpb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bc59b96bd11ab7500db457671852a7df25926590eb85614f9b26e0109dac1412
      image: registry.suse.com/suse/sles/15.3/virt-controller:0.45.0-8.4.3
      imageID: sha256:2536d353d5c418addea950abbeb54d4d5ca4205f5fa7660abcc64de10bd70652
      lastState: {}
      name: virt-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:53:34Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.71
    podIPs:
    - ip: 10.52.0.71
    qosClass: Burstable
    startTime: "2022-03-06T22:53:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: a0e36bbf3d0e9d848d5ec09e4c53d0e3a1cc674be9be92c470c35843b7cda13d
      cni.projectcalico.org/podIP: 10.52.0.70/32
      cni.projectcalico.org/podIPs: 10.52.0.70/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.70"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.70"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
      kubevirt.io/install-strategy-identifier: d3df7f87ee723ed71ca49f6c5cab7566dd4dc500
      kubevirt.io/install-strategy-registry: registry.suse.com/suse/sles/15.3
      kubevirt.io/install-strategy-version: 0.45.0-8.4.3
      scheduler.alpha.kubernetes.io/critical-pod: "null"
    creationTimestamp: "2022-03-06T22:53:26Z"
    generateName: virt-handler-
    labels:
      app.kubernetes.io/component: kubevirt
      app.kubernetes.io/managed-by: kubevirt-operator
      app.kubernetes.io/version: 0.45.0-8.4.3
      controller-revision-hash: 64b889bf7d
      kubevirt.io: virt-handler
      pod-template-generation: "1"
      prometheus.kubevirt.io: "null"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubevirt.io/install-strategy-identifier: {}
            f:kubevirt.io/install-strategy-registry: {}
            f:kubevirt.io/install-strategy-version: {}
            f:scheduler.alpha.kubernetes.io/critical-pod: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:kubevirt.io: {}
            f:pod-template-generation: {}
            f:prometheus.kubevirt.io: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"97f28535-3e56-4fef-b7c5-056175956dc2"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
          f:containers:
            k:{"name":"virt-handler"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"MY_POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:seLinuxOptions:
                  .: {}
                  f:level: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/virt-handler/clientcertificates"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/virt-handler/servercertificates"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/pods"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet/device-plugins"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet/pods"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubevirt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubevirt-node-labeller"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/kubevirt"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/run/kubevirt-libvirt-runtimes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/kubevirt-private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"virt-launcher"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/lib/kubevirt-node-labeller"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"device-plugin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"kubelet-pods"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"kubelet-pods-shortened"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"kubevirt-virt-handler-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"kubevirt-virt-handler-server-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"libvirt-runtimes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-labeller"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"virt-lib-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"virt-private-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"virt-share-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:53:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:53:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:53:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.70"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:54:26Z"
    name: virt-handler-h7lj5
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: virt-handler
      uid: 97f28535-3e56-4fef-b7c5-056175956dc2
    resourceVersion: "7320"
    uid: afbf0b2d-2344-45d0-a4c5-f14054ed7d1e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - node1
    containers:
    - command:
      - virt-handler
      - --port
      - "8443"
      - --hostname-override
      - $(NODE_NAME)
      - --pod-ip-address
      - $(MY_POD_IP)
      - --max-metric-requests
      - "3"
      - --console-server-port
      - "8186"
      - --graceful-shutdown-seconds
      - "315"
      - -v
      - "2"
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: MY_POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: registry.suse.com/suse/sles/15.3/virt-handler:0.45.0-8.4.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 45
        successThreshold: 1
        timeoutSeconds: 10
      name: virt-handler
      ports:
      - containerPort: 8443
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 10m
          memory: 230Mi
      securityContext:
        privileged: true
        seLinuxOptions:
          level: s0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/virt-handler/clientcertificates
        name: kubevirt-virt-handler-certs
        readOnly: true
      - mountPath: /etc/virt-handler/servercertificates
        name: kubevirt-virt-handler-server-certs
        readOnly: true
      - mountPath: /var/run/kubevirt-libvirt-runtimes
        name: libvirt-runtimes
      - mountPath: /var/run/kubevirt
        mountPropagation: Bidirectional
        name: virt-share-dir
      - mountPath: /var/lib/kubevirt
        name: virt-lib-dir
      - mountPath: /var/run/kubevirt-private
        name: virt-private-dir
      - mountPath: /var/lib/kubelet/device-plugins
        name: device-plugin
      - mountPath: /pods
        name: kubelet-pods-shortened
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: kubelet-pods
      - mountPath: /var/lib/kubevirt-node-labeller
        name: node-labeller
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h54bp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostPID: true
    initContainers:
    - args:
      - node-labeller.sh
      command:
      - /bin/sh
      - -c
      image: registry.suse.com/suse/sles/15.3/virt-launcher:0.45.0-8.4.3
      imagePullPolicy: IfNotPresent
      name: virt-launcher
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubevirt-node-labeller
        name: node-labeller
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h54bp
        readOnly: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1e+09
    priorityClassName: kubevirt-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubevirt-handler
    serviceAccountName: kubevirt-handler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: kubevirt-virt-handler-certs
      secret:
        defaultMode: 420
        optional: true
        secretName: kubevirt-virt-handler-certs
    - name: kubevirt-virt-handler-server-certs
      secret:
        defaultMode: 420
        optional: true
        secretName: kubevirt-virt-handler-server-certs
    - hostPath:
        path: /var/run/kubevirt-libvirt-runtimes
        type: "null"
      name: libvirt-runtimes
    - hostPath:
        path: /var/run/kubevirt
        type: "null"
      name: virt-share-dir
    - hostPath:
        path: /var/lib/kubevirt
        type: "null"
      name: virt-lib-dir
    - hostPath:
        path: /var/run/kubevirt-private
        type: "null"
      name: virt-private-dir
    - hostPath:
        path: /var/lib/kubelet/device-plugins
        type: "null"
      name: device-plugin
    - hostPath:
        path: /var/lib/kubelet/pods
        type: "null"
      name: kubelet-pods-shortened
    - hostPath:
        path: /var/lib/kubelet/pods
        type: "null"
      name: kubelet-pods
    - hostPath:
        path: /var/lib/kubevirt-node-labeller
        type: "null"
      name: node-labeller
    - name: kube-api-access-h54bp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:54:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:54:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5dbe0390d6684b112ffac7c11cae2b976683248b8cf15241a8e8289e2a8adabc
      image: registry.suse.com/suse/sles/15.3/virt-handler:0.45.0-8.4.3
      imageID: sha256:db088d4e03e7d10df168a73d6956493c6c77dd0b8d7ef77b8640a0e1e21c8761
      lastState: {}
      name: virt-handler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:54:04Z"
    hostIP: 172.16.132.182
    initContainerStatuses:
    - containerID: containerd://e2a150c1fe1845b89196754b7bb18b250c91d890cac3ed6bdbea9f83dcbfbfca
      image: registry.suse.com/suse/sles/15.3/virt-launcher:0.45.0-8.4.3
      imageID: sha256:c5d061cac2e3643b62810e1b2075979000684903772416188111b16c302d4b38
      lastState: {}
      name: virt-launcher
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://e2a150c1fe1845b89196754b7bb18b250c91d890cac3ed6bdbea9f83dcbfbfca
          exitCode: 0
          finishedAt: "2022-03-06T22:53:57Z"
          reason: Completed
          startedAt: "2022-03-06T22:53:48Z"
    phase: Running
    podIP: 10.52.0.70
    podIPs:
    - ip: 10.52.0.70
    qosClass: Burstable
    startTime: "2022-03-06T22:53:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 22cb8ba3e0e8fd35346d71c80101106ebc05fd16a73d77f148a81e847f90945e
      cni.projectcalico.org/podIP: 10.52.0.34/32
      cni.projectcalico.org/podIPs: 10.52.0.34/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.34"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.34"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:50:38Z"
    generateName: virt-operator-56c5bdc7b8-
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: virt-operator
      app.kubernetes.io/part-of: kubevirt-operator
      app.kubernetes.io/version: 0.30.x
      helm.sh/chart: kubevirt-operator-0.1.0
      helm.sh/release: harvester
      kubevirt.io: virt-operator
      pod-template-hash: 56c5bdc7b8
      prometheus.kubevirt.io: "null"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:helm.sh/release: {}
            f:kubevirt.io: {}
            f:pod-template-hash: {}
            f:prometheus.kubevirt.io: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9322ea24-2330-4bd4-88db-7f86a736fe5c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"virt-operator"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OPERATOR_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8444,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/virt-operator/certificates"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"kubevirt-operator-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:50:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:50:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.34"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:52:14Z"
    name: virt-operator-56c5bdc7b8-jqntd
    namespace: harvester-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: virt-operator-56c5bdc7b8
      uid: 9322ea24-2330-4bd4-88db-7f86a736fe5c
    resourceVersion: "4895"
    uid: d1bc3106-d8c7-4169-93ac-b175c18eecc4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: beta.kubernetes.io/os
              operator: In
              values:
              - linux
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: kubevirt.io
                operator: In
                values:
                - virt-operator
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - command:
      - virt-operator
      - --port
      - "8443"
      - -v
      - "2"
      env:
      - name: OPERATOR_IMAGE
        value: registry.suse.com/suse/sles/15.3/virt-operator:0.45.0-8.4.3
      image: registry.suse.com/suse/sles/15.3/virt-operator:0.45.0-8.4.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: virt-operator
      ports:
      - containerPort: 8443
        name: metrics
        protocol: TCP
      - containerPort: 8444
        name: webhooks
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/virt-operator/certificates
        name: kubevirt-operator-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cbkbm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 1e+09
    priorityClassName: kubevirt-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
    serviceAccount: kubevirt-operator
    serviceAccountName: kubevirt-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubevirt-operator-certs
      secret:
        defaultMode: 420
        optional: true
        secretName: kubevirt-operator-certs
    - name: kube-api-access-cbkbm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:52:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:52:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8ef8754bffe8cfee83f9f83798291972e19fa1a2980bf614aa14f81d8aa8e354
      image: registry.suse.com/suse/sles/15.3/virt-operator:0.45.0-8.4.3
      imageID: sha256:ecde4e18a75a7315d799b7de84345a479b7f157116d82a692d72bec1453c4a10
      lastState: {}
      name: virt-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:51:33Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.34
    podIPs:
    - ip: 10.52.0.34
    qosClass: Burstable
    startTime: "2022-03-06T22:50:38Z"
kind: List
metadata:
  resourceVersion: "14659186"
