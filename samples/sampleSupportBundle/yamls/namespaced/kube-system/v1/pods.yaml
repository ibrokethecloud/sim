apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 1c3f3806b4ee26f025e664935bfd1741
      kubernetes.io/config.mirror: 1c3f3806b4ee26f025e664935bfd1741
      kubernetes.io/config.seen: "2022-03-06T22:46:55.758877365Z"
      kubernetes.io/config.source: file
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:46:55Z"
    labels:
      component: cloud-controller-manager
      tier: control-plane
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
          f:labels:
            .: {}
            f:component: {}
            f:tier: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c4cd362a-7999-46e3-8744-b65c1581fd4e"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"cloud-controller-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"FILE_HASH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ca-certificates"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ssl/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/cred/cloud-controller.kubeconfig"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/client-rke2-cloud-controller.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/client-rke2-cloud-controller.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/server-ca.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"dir0"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"dir1"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file0"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file1"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file2"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file3"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:47:17Z"
    name: cloud-controller-manager-node1
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: node1
      uid: c4cd362a-7999-46e3-8744-b65c1581fd4e
    resourceVersion: "3733"
    uid: ef8d794b-8ec8-4914-9056-b34c7c49eda0
  spec:
    containers:
    - command:
      - cloud-controller-manager
      - --allocate-node-cidrs=true
      - --bind-address=127.0.0.1
      - --cloud-provider=rke2
      - --cluster-cidr=10.52.0.0/16
      - --configure-cloud-routes=false
      - --kubeconfig=/var/lib/rancher/rke2/server/cred/cloud-controller.kubeconfig
      - --node-status-update-frequency=1m0s
      - --port=0
      - --profiling=false
      env:
      - name: FILE_HASH
        value: d1b7c66ca273de29bf949605d12f1a5afca89ddb1b2c587262366a99e82d1a50
      - name: NO_PROXY
        value: .svc,.cluster.local,10.52.0.0/16,10.53.0.0/16
      image: index.docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10252
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: cloud-controller-manager
      resources:
        requests:
          cpu: 200m
      securityContext:
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: dir0
      - mountPath: /etc/ca-certificates
        name: dir1
      - mountPath: /var/lib/rancher/rke2/server/cred/cloud-controller.kubeconfig
        name: file0
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/client-rke2-cloud-controller.crt
        name: file1
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/client-rke2-cloud-controller.key
        name: file2
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/server-ca.crt
        name: file3
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: dir0
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: dir1
    - hostPath:
        path: /var/lib/rancher/rke2/server/cred/cloud-controller.kubeconfig
        type: File
      name: file0
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/client-rke2-cloud-controller.crt
        type: File
      name: file1
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/client-rke2-cloud-controller.key
        type: File
      name: file2
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/server-ca.crt
        type: File
      name: file3
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8d01c13de36d4ed2949d06e8cb2d1bc2c2d494133b23d69fdd63b5409126523b
      image: docker.io/rancher/rke2-cloud-provider:v0.0.3-build20211118
      imageID: sha256:029e4a095f53d3de36a939fa33339f4533f368210f36066156e42da8a13062be
      lastState: {}
      name: cloud-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:46:58Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: Burstable
    startTime: "2022-03-06T22:51:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      etcd.k3s.io/initial: '{"initial-advertise-peer-urls":"https://172.16.132.182:2380","initial-cluster":"node1-2076a358=https://172.16.132.182:2380","initial-cluster-state":"new"}'
      kubernetes.io/config.hash: 1f11ce5b9c7921f7d0eb9e23c34b38c9
      kubernetes.io/config.mirror: 1f11ce5b9c7921f7d0eb9e23c34b38c9
      kubernetes.io/config.seen: "2022-03-06T22:46:10.789514846Z"
      kubernetes.io/config.source: file
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:46:57Z"
    labels:
      component: etcd
      tier: control-plane
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:etcd.k3s.io/initial: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
          f:labels:
            .: {}
            f:component: {}
            f:tier: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c4cd362a-7999-46e3-8744-b65c1581fd4e"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"etcd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"FILE_HASH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/db/etcd"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/db/etcd/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/etcd/peer-ca.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/etcd/peer-server-client.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/etcd/peer-server-client.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/etcd/server-ca.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/etcd/server-client.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/etcd/server-client.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"dir0"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file0"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file1"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file2"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file3"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file4"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file5"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file6"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:47:17Z"
    name: etcd-node1
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: node1
      uid: c4cd362a-7999-46e3-8744-b65c1581fd4e
    resourceVersion: "3802"
    uid: f65eceff-19d5-455d-9711-f5b927115b97
  spec:
    containers:
    - command:
      - etcd
      - --config-file=/var/lib/rancher/rke2/server/db/etcd/config
      env:
      - name: FILE_HASH
        value: f76897259533f537b14f3606d34f048db2ec63718a77d0288faf603e61fc2248
      - name: NO_PROXY
        value: .svc,.cluster.local,10.52.0.0/16,10.53.0.0/16
      image: index.docker.io/rancher/hardened-etcd:v3.4.13-k3s3-build20211118
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources: {}
      securityContext:
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/rancher/rke2/server/db/etcd
        name: dir0
      - mountPath: /var/lib/rancher/rke2/server/tls/etcd/server-client.crt
        name: file0
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/etcd/server-client.key
        name: file1
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/etcd/server-ca.crt
        name: file2
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/etcd/peer-server-client.crt
        name: file3
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/etcd/peer-server-client.key
        name: file4
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/etcd/peer-ca.crt
        name: file5
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/db/etcd/config
        name: file6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/rancher/rke2/server/db/etcd
        type: DirectoryOrCreate
      name: dir0
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/etcd/server-client.crt
        type: File
      name: file0
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/etcd/server-client.key
        type: File
      name: file1
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/etcd/server-ca.crt
        type: File
      name: file2
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/etcd/peer-server-client.crt
        type: File
      name: file3
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/etcd/peer-server-client.key
        type: File
      name: file4
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/etcd/peer-ca.crt
        type: File
      name: file5
    - hostPath:
        path: /var/lib/rancher/rke2/server/db/etcd/config
        type: File
      name: file6
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3fd04d83a255dfd5397c962cce22757c8f480e7d15fc99b97a451b32cadc8ae6
      image: docker.io/rancher/hardened-etcd:v3.4.13-k3s3-build20211118
      imageID: sha256:cbeb6a8bed654f9883257869a79587edf472082731a6c4f6b4b6b78dcfd2dadd
      lastState: {}
      name: etcd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:46:21Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: BestEffort
    startTime: "2022-03-06T22:51:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      helmcharts.helm.cattle.io/configHash: SHA256=F6DC0D30823973BB4B8E6039EB2DE17C6D1DFB27388C9992CC4DCB486D30D463
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:47:09Z"
    generateName: helm-install-rke2-canal-
    labels:
      controller-uid: d83f0d74-8a67-452f-a5b4-5712b9e90258
      helmcharts.helm.cattle.io/chart: rke2-canal
      job-name: helm-install-rke2-canal
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:helmcharts.helm.cattle.io/configHash: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-uid: {}
            f:helmcharts.helm.cattle.io/chart: {}
            f:job-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d83f0d74-8a67-452f-a5b4-5712b9e90258"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"helm"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"BOOTSTRAP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHART"}:
                  .: {}
                  f:name: {}
                k:{"name":"CHART_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HELM_DRIVER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HELM_VERSION"}:
                  .: {}
                  f:name: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REPO"}:
                  .: {}
                  f:name: {}
                k:{"name":"TARGET_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VERSION"}:
                  .: {}
                  f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/chart"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
            f:node-role.kubernetes.io/control-plane: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"content"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"values"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:47:09Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:47:20Z"
    name: helm-install-rke2-canal-dxkxv
    namespace: kube-system
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: helm-install-rke2-canal
      uid: d83f0d74-8a67-452f-a5b4-5712b9e90258
    resourceVersion: "760"
    uid: db1460a1-50a4-4541-8f4d-a55563709732
  spec:
    containers:
    - args:
      - install
      - --set-string
      - global.clusterCIDR=10.52.0.0/16
      - --set-string
      - global.clusterCIDRv4=10.52.0.0/16
      - --set-string
      - global.clusterCIDRv6=
      - --set-string
      - global.clusterDNS=10.53.0.10
      - --set-string
      - global.clusterDomain=cluster.local
      - --set-string
      - global.rke2DataDir=/var/lib/rancher/rke2
      - --set-string
      - global.serviceCIDR=10.53.0.0/16
      - --set-string
      - global.systemDefaultRegistry=
      env:
      - name: NAME
        value: rke2-canal
      - name: VERSION
      - name: REPO
      - name: HELM_DRIVER
        value: secret
      - name: CHART_NAMESPACE
        value: kube-system
      - name: CHART
      - name: HELM_VERSION
      - name: TARGET_NAMESPACE
        value: kube-system
      - name: KUBERNETES_SERVICE_HOST
        value: 127.0.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: BOOTSTRAP
        value: "true"
      - name: NO_PROXY
        value: .svc,.cluster.local,10.52.0.0/16,10.53.0.0/16
      image: rancher/klipper-helm:v0.6.6-build20211022
      imagePullPolicy: IfNotPresent
      name: helm
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: values
      - mountPath: /chart
        name: content
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p8wvp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
      node-role.kubernetes.io/control-plane: "true"
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: helm-rke2-canal
    serviceAccountName: helm-rke2-canal
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node.kubernetes.io/not-ready
    - effect: NoSchedule
      key: node.cloudprovider.kubernetes.io/uninitialized
      operator: Equal
      value: "true"
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node-role.kubernetes.io/etcd
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: chart-values-rke2-canal
      name: values
    - configMap:
        defaultMode: 420
        name: chart-content-rke2-canal
      name: content
    - name: kube-api-access-p8wvp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:09Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:20Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:20Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://06e22eebdd3e5886d0bc5fa18b9431a01ccb2a92a844d27346e433efa0720f58
      image: docker.io/rancher/klipper-helm:v0.6.6-build20211022
      imageID: sha256:194c895f8d63f331d50d0da3cd27a5bcdd03428ec445f1f6dfaae9a5ca9e5de3
      lastState: {}
      name: helm
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://06e22eebdd3e5886d0bc5fa18b9431a01ccb2a92a844d27346e433efa0720f58
          exitCode: 0
          finishedAt: "2022-03-06T22:47:20Z"
          reason: Completed
          startedAt: "2022-03-06T22:47:16Z"
    hostIP: 172.16.132.182
    phase: Succeeded
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: BestEffort
    startTime: "2022-03-06T22:47:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      helmcharts.helm.cattle.io/configHash: SHA256=38AD0C4BF98F08B1A1670479518F392E8A9A772E0E5B48409D980304DA2D33D0
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:47:09Z"
    generateName: helm-install-rke2-coredns-
    labels:
      controller-uid: 83b6a7f6-e1f8-4174-9df7-d0b4af0bcf33
      helmcharts.helm.cattle.io/chart: rke2-coredns
      job-name: helm-install-rke2-coredns
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:helmcharts.helm.cattle.io/configHash: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-uid: {}
            f:helmcharts.helm.cattle.io/chart: {}
            f:job-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"83b6a7f6-e1f8-4174-9df7-d0b4af0bcf33"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"helm"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"BOOTSTRAP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHART"}:
                  .: {}
                  f:name: {}
                k:{"name":"CHART_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HELM_DRIVER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HELM_VERSION"}:
                  .: {}
                  f:name: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REPO"}:
                  .: {}
                  f:name: {}
                k:{"name":"TARGET_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VERSION"}:
                  .: {}
                  f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/chart"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
            f:node-role.kubernetes.io/control-plane: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"content"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"values"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:47:09Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:47:20Z"
    name: helm-install-rke2-coredns-z8xr4
    namespace: kube-system
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: helm-install-rke2-coredns
      uid: 83b6a7f6-e1f8-4174-9df7-d0b4af0bcf33
    resourceVersion: "763"
    uid: efe29872-22fc-424a-9c12-6a3065b2abc2
  spec:
    containers:
    - args:
      - install
      - --set-string
      - global.clusterCIDR=10.52.0.0/16
      - --set-string
      - global.clusterCIDRv4=10.52.0.0/16
      - --set-string
      - global.clusterCIDRv6=
      - --set-string
      - global.clusterDNS=10.53.0.10
      - --set-string
      - global.clusterDomain=cluster.local
      - --set-string
      - global.rke2DataDir=/var/lib/rancher/rke2
      - --set-string
      - global.serviceCIDR=10.53.0.0/16
      - --set-string
      - global.systemDefaultRegistry=
      env:
      - name: NAME
        value: rke2-coredns
      - name: VERSION
      - name: REPO
      - name: HELM_DRIVER
        value: secret
      - name: CHART_NAMESPACE
        value: kube-system
      - name: CHART
      - name: HELM_VERSION
      - name: TARGET_NAMESPACE
        value: kube-system
      - name: KUBERNETES_SERVICE_HOST
        value: 127.0.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: BOOTSTRAP
        value: "true"
      - name: NO_PROXY
        value: .svc,.cluster.local,10.52.0.0/16,10.53.0.0/16
      image: rancher/klipper-helm:v0.6.6-build20211022
      imagePullPolicy: IfNotPresent
      name: helm
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: values
      - mountPath: /chart
        name: content
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lkf54
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
      node-role.kubernetes.io/control-plane: "true"
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: helm-rke2-coredns
    serviceAccountName: helm-rke2-coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node.kubernetes.io/not-ready
    - effect: NoSchedule
      key: node.cloudprovider.kubernetes.io/uninitialized
      operator: Equal
      value: "true"
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node-role.kubernetes.io/etcd
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: chart-values-rke2-coredns
      name: values
    - configMap:
        defaultMode: 420
        name: chart-content-rke2-coredns
      name: content
    - name: kube-api-access-lkf54
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:09Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:20Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:20Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9132b0b92fd0d8871a78b517cad20aef977150689219192a8513e9f5f059326b
      image: docker.io/rancher/klipper-helm:v0.6.6-build20211022
      imageID: sha256:194c895f8d63f331d50d0da3cd27a5bcdd03428ec445f1f6dfaae9a5ca9e5de3
      lastState: {}
      name: helm
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://9132b0b92fd0d8871a78b517cad20aef977150689219192a8513e9f5f059326b
          exitCode: 0
          finishedAt: "2022-03-06T22:47:19Z"
          reason: Completed
          startedAt: "2022-03-06T22:47:16Z"
    hostIP: 172.16.132.182
    phase: Succeeded
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: BestEffort
    startTime: "2022-03-06T22:47:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: a2ce024d324f1f91ca741c24084b0566fffef6d806ec82af0e0a4697bc4229f8
      cni.projectcalico.org/podIP: "null"
      cni.projectcalico.org/podIPs: "null"
      helmcharts.helm.cattle.io/configHash: SHA256=6F9D4361153E914BD67F6E6B1F3DA920170E633BC0F779D8F2E0127162757B5B
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.73"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.73"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:53:29Z"
    generateName: helm-install-rke2-ingress-nginx-
    labels:
      controller-uid: a475bc6f-d2cb-4891-8db3-8997b91e86bf
      helmcharts.helm.cattle.io/chart: rke2-ingress-nginx
      job-name: helm-install-rke2-ingress-nginx
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:helmcharts.helm.cattle.io/configHash: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-uid: {}
            f:helmcharts.helm.cattle.io/chart: {}
            f:job-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a475bc6f-d2cb-4891-8db3-8997b91e86bf"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"helm"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"CHART"}:
                  .: {}
                  f:name: {}
                k:{"name":"CHART_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HELM_DRIVER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HELM_VERSION"}:
                  .: {}
                  f:name: {}
                k:{"name":"NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REPO"}:
                  .: {}
                  f:name: {}
                k:{"name":"TARGET_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VERSION"}:
                  .: {}
                  f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/chart"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"content"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"values"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:53:29Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:53:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:53:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.73"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:53:59Z"
    name: helm-install-rke2-ingress-nginx-5jx8j
    namespace: kube-system
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: helm-install-rke2-ingress-nginx
      uid: a475bc6f-d2cb-4891-8db3-8997b91e86bf
    resourceVersion: "6910"
    uid: 38e9ad85-9ea9-47ef-8074-8a44f09721e3
  spec:
    containers:
    - args:
      - install
      - --set-string
      - global.clusterCIDR=10.52.0.0/16
      - --set-string
      - global.clusterCIDRv4=10.52.0.0/16
      - --set-string
      - global.clusterCIDRv6=
      - --set-string
      - global.clusterDNS=10.53.0.10
      - --set-string
      - global.clusterDomain=cluster.local
      - --set-string
      - global.rke2DataDir=/var/lib/rancher/rke2
      - --set-string
      - global.serviceCIDR=10.53.0.0/16
      - --set-string
      - global.systemDefaultRegistry=
      env:
      - name: NAME
        value: rke2-ingress-nginx
      - name: VERSION
      - name: REPO
      - name: HELM_DRIVER
        value: secret
      - name: CHART_NAMESPACE
        value: kube-system
      - name: CHART
      - name: HELM_VERSION
      - name: TARGET_NAMESPACE
        value: kube-system
      - name: NO_PROXY
        value: .svc,.cluster.local,10.52.0.0/16,10.53.0.0/16
      image: rancher/klipper-helm:v0.6.6-build20211022
      imagePullPolicy: IfNotPresent
      name: helm
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: values
      - mountPath: /chart
        name: content
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fx6dh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: helm-rke2-ingress-nginx
    serviceAccountName: helm-rke2-ingress-nginx
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: chart-values-rke2-ingress-nginx
      name: values
    - configMap:
        defaultMode: 420
        name: chart-content-rke2-ingress-nginx
      name: content
    - name: kube-api-access-fx6dh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:29Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:58Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:58Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:53:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1dfa65265a9799fb745502c14969a2a0aa4ff133b20df33d160a57e315467282
      image: docker.io/rancher/klipper-helm:v0.6.6-build20211022
      imageID: sha256:194c895f8d63f331d50d0da3cd27a5bcdd03428ec445f1f6dfaae9a5ca9e5de3
      lastState: {}
      name: helm
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1dfa65265a9799fb745502c14969a2a0aa4ff133b20df33d160a57e315467282
          exitCode: 0
          finishedAt: "2022-03-06T22:53:57Z"
          reason: Completed
          startedAt: "2022-03-06T22:53:35Z"
    hostIP: 172.16.132.182
    phase: Succeeded
    podIP: 10.52.0.73
    podIPs:
    - ip: 10.52.0.73
    qosClass: BestEffort
    startTime: "2022-03-06T22:53:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: c7f64d0a5a1bf4ac94f1564dd85d5cfeed482ada3add616f868ad3e460cce93d
      cni.projectcalico.org/podIP: "null"
      cni.projectcalico.org/podIPs: "null"
      helmcharts.helm.cattle.io/configHash: SHA256=F354A0931EE5EDA753DA60825DF6D96816C39A9D40026565E97C0B12081F1FAF
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.5"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.5"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:47:09Z"
    generateName: helm-install-rke2-metrics-server-
    labels:
      controller-uid: b9372561-eb6e-4d5e-b864-e5967bca1e8f
      helmcharts.helm.cattle.io/chart: rke2-metrics-server
      job-name: helm-install-rke2-metrics-server
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:helmcharts.helm.cattle.io/configHash: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-uid: {}
            f:helmcharts.helm.cattle.io/chart: {}
            f:job-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b9372561-eb6e-4d5e-b864-e5967bca1e8f"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"helm"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"CHART"}:
                  .: {}
                  f:name: {}
                k:{"name":"CHART_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HELM_DRIVER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HELM_VERSION"}:
                  .: {}
                  f:name: {}
                k:{"name":"NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REPO"}:
                  .: {}
                  f:name: {}
                k:{"name":"TARGET_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VERSION"}:
                  .: {}
                  f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/chart"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"content"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"values"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:47:09Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: "2022-03-06T22:47:09Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:47:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:47:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.5"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:47:59Z"
    name: helm-install-rke2-metrics-server-hmjvp
    namespace: kube-system
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: helm-install-rke2-metrics-server
      uid: b9372561-eb6e-4d5e-b864-e5967bca1e8f
    resourceVersion: "1011"
    uid: 6924b9ce-512b-4d08-9a21-bfca9465d409
  spec:
    containers:
    - args:
      - install
      - --set-string
      - global.clusterCIDR=10.52.0.0/16
      - --set-string
      - global.clusterCIDRv4=10.52.0.0/16
      - --set-string
      - global.clusterCIDRv6=
      - --set-string
      - global.clusterDNS=10.53.0.10
      - --set-string
      - global.clusterDomain=cluster.local
      - --set-string
      - global.rke2DataDir=/var/lib/rancher/rke2
      - --set-string
      - global.serviceCIDR=10.53.0.0/16
      - --set-string
      - global.systemDefaultRegistry=
      env:
      - name: NAME
        value: rke2-metrics-server
      - name: VERSION
      - name: REPO
      - name: HELM_DRIVER
        value: secret
      - name: CHART_NAMESPACE
        value: kube-system
      - name: CHART
      - name: HELM_VERSION
      - name: TARGET_NAMESPACE
        value: kube-system
      - name: NO_PROXY
        value: .svc,.cluster.local,10.52.0.0/16,10.53.0.0/16
      image: rancher/klipper-helm:v0.6.6-build20211022
      imagePullPolicy: IfNotPresent
      name: helm
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: values
      - mountPath: /chart
        name: content
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c5drd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: helm-rke2-metrics-server
    serviceAccountName: helm-rke2-metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: chart-values-rke2-metrics-server
      name: values
    - configMap:
        defaultMode: 420
        name: chart-content-rke2-metrics-server
      name: content
    - name: kube-api-access-c5drd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:50Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:59Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:59Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://41f242f3c1fd0a97c1cd6f1fada40ce343d15280d1eeee338578356279e9e184
      image: docker.io/rancher/klipper-helm:v0.6.6-build20211022
      imageID: sha256:194c895f8d63f331d50d0da3cd27a5bcdd03428ec445f1f6dfaae9a5ca9e5de3
      lastState: {}
      name: helm
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://41f242f3c1fd0a97c1cd6f1fada40ce343d15280d1eeee338578356279e9e184
          exitCode: 0
          finishedAt: "2022-03-06T22:47:58Z"
          reason: Completed
          startedAt: "2022-03-06T22:47:52Z"
    hostIP: 172.16.132.182
    phase: Succeeded
    podIP: 10.52.0.5
    podIPs:
    - ip: 10.52.0.5
    qosClass: BestEffort
    startTime: "2022-03-06T22:47:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      helmcharts.helm.cattle.io/configHash: SHA256=498E9F8B465778A5B628760B9115B0A426270557554460968136D54E910E8842
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:47:09Z"
    generateName: helm-install-rke2-multus-
    labels:
      controller-uid: 43eccd6e-a407-4060-a64a-cfbc9f2a9e41
      helmcharts.helm.cattle.io/chart: rke2-multus
      job-name: helm-install-rke2-multus
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:helmcharts.helm.cattle.io/configHash: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-uid: {}
            f:helmcharts.helm.cattle.io/chart: {}
            f:job-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"43eccd6e-a407-4060-a64a-cfbc9f2a9e41"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"helm"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"BOOTSTRAP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHART"}:
                  .: {}
                  f:name: {}
                k:{"name":"CHART_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HELM_DRIVER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HELM_VERSION"}:
                  .: {}
                  f:name: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REPO"}:
                  .: {}
                  f:name: {}
                k:{"name":"TARGET_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VERSION"}:
                  .: {}
                  f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/chart"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
            f:node-role.kubernetes.io/control-plane: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"content"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"values"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:47:09Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:47:20Z"
    name: helm-install-rke2-multus-fxllp
    namespace: kube-system
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: helm-install-rke2-multus
      uid: 43eccd6e-a407-4060-a64a-cfbc9f2a9e41
    resourceVersion: "757"
    uid: c93b8081-a5d8-4508-84b9-ea7528e0d2bc
  spec:
    containers:
    - args:
      - install
      - --set-string
      - global.clusterCIDR=10.52.0.0/16
      - --set-string
      - global.clusterCIDRv4=10.52.0.0/16
      - --set-string
      - global.clusterCIDRv6=
      - --set-string
      - global.clusterDNS=10.53.0.10
      - --set-string
      - global.clusterDomain=cluster.local
      - --set-string
      - global.rke2DataDir=/var/lib/rancher/rke2
      - --set-string
      - global.serviceCIDR=10.53.0.0/16
      - --set-string
      - global.systemDefaultRegistry=
      env:
      - name: NAME
        value: rke2-multus
      - name: VERSION
      - name: REPO
      - name: HELM_DRIVER
        value: secret
      - name: CHART_NAMESPACE
        value: kube-system
      - name: CHART
      - name: HELM_VERSION
      - name: TARGET_NAMESPACE
        value: kube-system
      - name: KUBERNETES_SERVICE_HOST
        value: 127.0.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: BOOTSTRAP
        value: "true"
      - name: NO_PROXY
        value: .svc,.cluster.local,10.52.0.0/16,10.53.0.0/16
      image: rancher/klipper-helm:v0.6.6-build20211022
      imagePullPolicy: IfNotPresent
      name: helm
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: values
      - mountPath: /chart
        name: content
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fnqnz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
      node-role.kubernetes.io/control-plane: "true"
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: helm-rke2-multus
    serviceAccountName: helm-rke2-multus
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node.kubernetes.io/not-ready
    - effect: NoSchedule
      key: node.cloudprovider.kubernetes.io/uninitialized
      operator: Equal
      value: "true"
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node-role.kubernetes.io/etcd
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: chart-values-rke2-multus
      name: values
    - configMap:
        defaultMode: 420
        name: chart-content-rke2-multus
      name: content
    - name: kube-api-access-fnqnz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:09Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:20Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:20Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://17fb95326355568a7f8ee8883e374c398bca658cc9f095137455a0b54492ffac
      image: docker.io/rancher/klipper-helm:v0.6.6-build20211022
      imageID: sha256:194c895f8d63f331d50d0da3cd27a5bcdd03428ec445f1f6dfaae9a5ca9e5de3
      lastState: {}
      name: helm
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://17fb95326355568a7f8ee8883e374c398bca658cc9f095137455a0b54492ffac
          exitCode: 0
          finishedAt: "2022-03-06T22:47:19Z"
          reason: Completed
          startedAt: "2022-03-06T22:47:16Z"
    hostIP: 172.16.132.182
    phase: Succeeded
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: BestEffort
    startTime: "2022-03-06T22:47:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: bf75d574fad695e09a80ce388249abee
      kubernetes.io/config.mirror: bf75d574fad695e09a80ce388249abee
      kubernetes.io/config.seen: "2022-03-06T22:46:32.738782502Z"
      kubernetes.io/config.source: file
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:47:23Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
          f:labels:
            .: {}
            f:component: {}
            f:tier: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c4cd362a-7999-46e3-8744-b65c1581fd4e"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"kube-apiserver"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"FILE_HASH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ca-certificates"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ssl/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/cred/encryption-config.json"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/db/etcd/name"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/logs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/client-auth-proxy.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/client-auth-proxy.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/client-ca.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/client-kube-apiserver.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/client-kube-apiserver.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/etcd/client.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/etcd/client.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/etcd/server-ca.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/request-header-ca.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/server-ca.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/service.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/serving-kube-apiserver.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/serving-kube-apiserver.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"dir0"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"dir1"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"dir2"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file0"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file1"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file2"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file3"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file4"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file5"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file6"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file7"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file8"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file9"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file10"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file11"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file12"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file13"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file14"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:47:27Z"
    name: kube-apiserver-node1
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: node1
      uid: c4cd362a-7999-46e3-8744-b65c1581fd4e
    resourceVersion: "3867"
    uid: 018dc805-16fb-45e0-bc57-1723fe86e461
  spec:
    containers:
    - command:
      - kube-apiserver
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --allow-privileged=true
      - --anonymous-auth=false
      - --api-audiences=https://kubernetes.default.svc.cluster.local,rke2
      - --authorization-mode=Node,RBAC
      - --bind-address=0.0.0.0
      - --cert-dir=/var/lib/rancher/rke2/server/tls/temporary-certs
      - --client-ca-file=/var/lib/rancher/rke2/server/tls/client-ca.crt
      - --enable-admission-plugins=NodeRestriction,PodSecurityPolicy
      - --encryption-provider-config=/var/lib/rancher/rke2/server/cred/encryption-config.json
      - --etcd-cafile=/var/lib/rancher/rke2/server/tls/etcd/server-ca.crt
      - --etcd-certfile=/var/lib/rancher/rke2/server/tls/etcd/client.crt
      - --etcd-keyfile=/var/lib/rancher/rke2/server/tls/etcd/client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --insecure-port=0
      - --kubelet-certificate-authority=/var/lib/rancher/rke2/server/tls/server-ca.crt
      - --kubelet-client-certificate=/var/lib/rancher/rke2/server/tls/client-kube-apiserver.crt
      - --kubelet-client-key=/var/lib/rancher/rke2/server/tls/client-kube-apiserver.key
      - --profiling=false
      - --proxy-client-cert-file=/var/lib/rancher/rke2/server/tls/client-auth-proxy.crt
      - --proxy-client-key-file=/var/lib/rancher/rke2/server/tls/client-auth-proxy.key
      - --requestheader-allowed-names=system:auth-proxy
      - --requestheader-client-ca-file=/var/lib/rancher/rke2/server/tls/request-header-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=6443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/var/lib/rancher/rke2/server/tls/service.key
      - --service-account-signing-key-file=/var/lib/rancher/rke2/server/tls/service.key
      - --service-cluster-ip-range=10.53.0.0/16
      - --service-node-port-range=30000-32767
      - --storage-backend=etcd3
      - --tls-cert-file=/var/lib/rancher/rke2/server/tls/serving-kube-apiserver.crt
      - --tls-private-key-file=/var/lib/rancher/rke2/server/tls/serving-kube-apiserver.key
      env:
      - name: FILE_HASH
        value: 9b5f63ddc64a50513a7d49512804cdbaeec0a6937e16d29e95cec51852f3666b
      - name: NO_PROXY
        value: .svc,.cluster.local,10.52.0.0/16,10.53.0.0/16
      image: index.docker.io/rancher/hardened-kubernetes:v1.21.7-rke2r1-build20211119
      imagePullPolicy: IfNotPresent
      name: kube-apiserver
      resources:
        requests:
          cpu: 250m
      securityContext:
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: dir0
      - mountPath: /etc/ca-certificates
        name: dir1
      - mountPath: /var/lib/rancher/rke2/server/logs
        name: dir2
      - mountPath: /var/lib/rancher/rke2/server/db/etcd/name
        name: file0
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/cred/encryption-config.json
        name: file1
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/client-auth-proxy.crt
        name: file2
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/client-auth-proxy.key
        name: file3
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/client-ca.crt
        name: file4
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/client-kube-apiserver.crt
        name: file5
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/client-kube-apiserver.key
        name: file6
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/etcd/client.crt
        name: file7
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/etcd/client.key
        name: file8
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/etcd/server-ca.crt
        name: file9
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/request-header-ca.crt
        name: file10
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/server-ca.crt
        name: file11
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/service.key
        name: file12
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/serving-kube-apiserver.crt
        name: file13
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/serving-kube-apiserver.key
        name: file14
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: dir0
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: dir1
    - hostPath:
        path: /var/lib/rancher/rke2/server/logs
        type: DirectoryOrCreate
      name: dir2
    - hostPath:
        path: /var/lib/rancher/rke2/server/db/etcd/name
        type: File
      name: file0
    - hostPath:
        path: /var/lib/rancher/rke2/server/cred/encryption-config.json
        type: File
      name: file1
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/client-auth-proxy.crt
        type: File
      name: file2
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/client-auth-proxy.key
        type: File
      name: file3
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/client-ca.crt
        type: File
      name: file4
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/client-kube-apiserver.crt
        type: File
      name: file5
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/client-kube-apiserver.key
        type: File
      name: file6
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/etcd/client.crt
        type: File
      name: file7
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/etcd/client.key
        type: File
      name: file8
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/etcd/server-ca.crt
        type: File
      name: file9
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/request-header-ca.crt
        type: File
      name: file10
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/server-ca.crt
        type: File
      name: file11
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/service.key
        type: File
      name: file12
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/serving-kube-apiserver.crt
        type: File
      name: file13
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/serving-kube-apiserver.key
        type: File
      name: file14
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://eb694d602e45601e7589986686fc3a8593bbad802631d6dca6f9d8c980e1fc74
      image: docker.io/rancher/hardened-kubernetes:v1.21.7-rke2r1-build20211119
      imageID: sha256:853c51018f8dd6eaa2ccd0e401cb724e44cc1a6cdbd172886d96770cbc8688ff
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:46:44Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: Burstable
    startTime: "2022-03-06T22:51:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: fbbda2b1fa62265241f58083eee4dd5b
      kubernetes.io/config.mirror: fbbda2b1fa62265241f58083eee4dd5b
      kubernetes.io/config.seen: "2022-03-06T22:51:03.751126338Z"
      kubernetes.io/config.source: file
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:51:22Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
          f:labels:
            .: {}
            f:component: {}
            f:tier: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c4cd362a-7999-46e3-8744-b65c1581fd4e"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"kube-controller-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"FILE_HASH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ca-certificates"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ssl/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/cred/controller.kubeconfig"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/db/etcd/name"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/client-ca.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/client-ca.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/client-controller.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/client-controller.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/kube-controller-manager"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/server-ca.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/server-ca.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/service.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"dir0"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"dir1"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"extra-mount-0"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file0"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file1"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file2"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file3"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file4"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file5"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file6"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file7"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file8"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:51:30Z"
    name: kube-controller-manager-node1
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: node1
      uid: c4cd362a-7999-46e3-8744-b65c1581fd4e
    resourceVersion: "3877"
    uid: 2ec9f28f-8fb8-4a28-89d6-7506cdb2d0e9
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --flex-volume-plugin-dir=/var/lib/kubelet/volumeplugins
      - --terminated-pod-gc-threshold=1000
      - --permit-port-sharing=true
      - --address=127.0.0.1
      - --allocate-node-cidrs=true
      - --bind-address=127.0.0.1
      - --cert-dir=/var/lib/rancher/rke2/server/tls/kube-controller-manager
      - --cluster-cidr=10.52.0.0/16
      - --cluster-signing-kube-apiserver-client-cert-file=/var/lib/rancher/rke2/server/tls/client-ca.crt
      - --cluster-signing-kube-apiserver-client-key-file=/var/lib/rancher/rke2/server/tls/client-ca.key
      - --cluster-signing-kubelet-client-cert-file=/var/lib/rancher/rke2/server/tls/client-ca.crt
      - --cluster-signing-kubelet-client-key-file=/var/lib/rancher/rke2/server/tls/client-ca.key
      - --cluster-signing-kubelet-serving-cert-file=/var/lib/rancher/rke2/server/tls/server-ca.crt
      - --cluster-signing-kubelet-serving-key-file=/var/lib/rancher/rke2/server/tls/server-ca.key
      - --cluster-signing-legacy-unknown-cert-file=/var/lib/rancher/rke2/server/tls/client-ca.crt
      - --cluster-signing-legacy-unknown-key-file=/var/lib/rancher/rke2/server/tls/client-ca.key
      - --configure-cloud-routes=false
      - --controllers=*,-service,-route,-cloud-node-lifecycle
      - --kubeconfig=/var/lib/rancher/rke2/server/cred/controller.kubeconfig
      - --port=10252
      - --profiling=false
      - --root-ca-file=/var/lib/rancher/rke2/server/tls/server-ca.crt
      - --secure-port=10257
      - --service-account-private-key-file=/var/lib/rancher/rke2/server/tls/service.key
      - --use-service-account-credentials=true
      env:
      - name: FILE_HASH
        value: 7b39f27dfb57bfde31c0b0df9fb9a29badc2bd29f4fcf91bfb8aa12fffb3560f
      - name: NO_PROXY
        value: .svc,.cluster.local,10.52.0.0/16,10.53.0.0/16
      image: index.docker.io/rancher/hardened-kubernetes:v1.21.7-rke2r1-build20211119
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10252
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      securityContext:
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: dir0
      - mountPath: /etc/ca-certificates
        name: dir1
      - mountPath: /var/lib/rancher/rke2/server/db/etcd/name
        name: file0
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/cred/controller.kubeconfig
        name: file1
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/client-ca.crt
        name: file2
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/client-ca.key
        name: file3
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/client-controller.crt
        name: file4
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/client-controller.key
        name: file5
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/server-ca.crt
        name: file6
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/server-ca.key
        name: file7
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/service.key
        name: file8
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/kube-controller-manager
        name: extra-mount-0
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: dir0
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: dir1
    - hostPath:
        path: /var/lib/rancher/rke2/server/db/etcd/name
        type: File
      name: file0
    - hostPath:
        path: /var/lib/rancher/rke2/server/cred/controller.kubeconfig
        type: File
      name: file1
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/client-ca.crt
        type: File
      name: file2
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/client-ca.key
        type: File
      name: file3
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/client-controller.crt
        type: File
      name: file4
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/client-controller.key
        type: File
      name: file5
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/server-ca.crt
        type: File
      name: file6
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/server-ca.key
        type: File
      name: file7
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/service.key
        type: File
      name: file8
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/kube-controller-manager
        type: DirectoryOrCreate
      name: extra-mount-0
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4d608e65101fa9e3a38df929134589d587eb3a397405ea15db50894aab6d7c78
      image: docker.io/rancher/hardened-kubernetes:v1.21.7-rke2r1-build20211119
      imageID: sha256:853c51018f8dd6eaa2ccd0e401cb724e44cc1a6cdbd172886d96770cbc8688ff
      lastState: {}
      name: kube-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:51:17Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: Burstable
    startTime: "2022-03-06T22:51:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:47:19Z"
    generateName: kube-multus-ds-
    labels:
      controller-revision-hash: 588654c788
      name: multus
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:name: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3db141f0-75ac-48ce-9dfa-c9a2cfe79b8f"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"SKIP_CNI_BINARIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:47:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:47:32Z"
    name: kube-multus-ds-db5bp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-multus-ds
      uid: 3db141f0-75ac-48ce-9dfa-c9a2cfe79b8f
    resourceVersion: "814"
    uid: b6f620f6-e322-484e-97ee-9e2bf310244a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - node1
    containers:
    - args:
      - --multus-conf-file=auto
      - --cni-version=0.3.1
      command:
      - /entrypoint.sh
      image: rancher/hardened-multus-cni:v3.7.1-build20211119
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zv96b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - env:
      - name: SKIP_CNI_BINARIES
        value: flannel
      image: rancher/hardened-cni-plugins:v0.9.1-build20211119
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zv96b
        readOnly: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus
    serviceAccountName: multus
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: "null"
      name: cni
    - hostPath:
        path: /opt/cni/bin
        type: "null"
      name: cnibin
    - name: kube-api-access-zv96b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://754bbc7b273669c2176dbf1237542ab1b1d92d2e34967293477a439987bddefe
      image: docker.io/rancher/hardened-multus-cni:v3.7.1-build20211119
      imageID: sha256:e9e92ffb1e664d006a40cd8ca337e13adc90a851b4f1cf74217dca93522b0370
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:47:32Z"
    hostIP: 172.16.132.182
    initContainerStatuses:
    - containerID: containerd://3f2981e92683f71a497c728c112475434561cd72b3e89ea97a798a2eda5814c8
      image: docker.io/rancher/hardened-cni-plugins:v0.9.1-build20211119
      imageID: sha256:a01dc94a8ae1892b09afc74b352d9edc48ffaac433df444a705446e21cea673d
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://3f2981e92683f71a497c728c112475434561cd72b3e89ea97a798a2eda5814c8
          exitCode: 0
          finishedAt: "2022-03-06T22:47:25Z"
          reason: Completed
          startedAt: "2022-03-06T22:47:22Z"
    phase: Running
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: Burstable
    startTime: "2022-03-06T22:47:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: bbc57a63913b65270ff81826dce1fef5
      kubernetes.io/config.mirror: bbc57a63913b65270ff81826dce1fef5
      kubernetes.io/config.seen: "2022-03-06T22:47:00.229745566Z"
      kubernetes.io/config.source: file
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:47:00Z"
    labels:
      component: kube-proxy
      tier: control-plane
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
          f:labels:
            .: {}
            f:component: {}
            f:tier: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c4cd362a-7999-46e3-8744-b65c1581fd4e"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"kube-proxy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"FILE_HASH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/lib/rancher/rke2/agent/client-kube-proxy.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/agent/client-kube-proxy.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/agent/kubeproxy.kubeconfig"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/agent/server-ca.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"file0"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file1"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file2"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file3"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:47:17Z"
    name: kube-proxy-node1
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: node1
      uid: c4cd362a-7999-46e3-8744-b65c1581fd4e
    resourceVersion: "620"
    uid: 0cc6cb2a-7a06-427a-afda-16a2e29fdb35
  spec:
    containers:
    - command:
      - kube-proxy
      - --cluster-cidr=10.52.0.0/16
      - --conntrack-max-per-core=0
      - --conntrack-tcp-timeout-close-wait=0s
      - --conntrack-tcp-timeout-established=0s
      - --healthz-bind-address=127.0.0.1
      - --hostname-override=node1
      - --kubeconfig=/var/lib/rancher/rke2/agent/kubeproxy.kubeconfig
      - --proxy-mode=iptables
      env:
      - name: FILE_HASH
        value: 6aed49a5ac0e77f75e3878a35aa2fd8a29181529e2c65784a0f2018da04b5830
      - name: NO_PROXY
        value: .svc,.cluster.local,10.52.0.0/16,10.53.0.0/16
      image: index.docker.io/rancher/hardened-kubernetes:v1.21.7-rke2r1-build20211119
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 250m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/rancher/rke2/agent/client-kube-proxy.crt
        name: file0
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/agent/client-kube-proxy.key
        name: file1
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/agent/kubeproxy.kubeconfig
        name: file2
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/agent/server-ca.crt
        name: file3
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/rancher/rke2/agent/client-kube-proxy.crt
        type: File
      name: file0
    - hostPath:
        path: /var/lib/rancher/rke2/agent/client-kube-proxy.key
        type: File
      name: file1
    - hostPath:
        path: /var/lib/rancher/rke2/agent/kubeproxy.kubeconfig
        type: File
      name: file2
    - hostPath:
        path: /var/lib/rancher/rke2/agent/server-ca.crt
        type: File
      name: file3
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7cba8231a9fde485cc779597023a9a826c8a9ccd414f32a97235bcb724191018
      image: docker.io/rancher/hardened-kubernetes:v1.21.7-rke2r1-build20211119
      imageID: sha256:853c51018f8dd6eaa2ccd0e401cb724e44cc1a6cdbd172886d96770cbc8688ff
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:47:01Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: Burstable
    startTime: "2022-03-06T22:47:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: db1861b622deeb2b742c17fb61f163a4
      kubernetes.io/config.mirror: db1861b622deeb2b742c17fb61f163a4
      kubernetes.io/config.seen: "2022-03-06T22:51:03.751132438Z"
      kubernetes.io/config.source: file
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:51:23Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
          f:labels:
            .: {}
            f:component: {}
            f:tier: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c4cd362a-7999-46e3-8744-b65c1581fd4e"}:
              .: {}
              f:apiVersion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"kube-scheduler"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"FILE_HASH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/cred/scheduler.kubeconfig"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/db/etcd/name"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/client-scheduler.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/client-scheduler.key"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/kube-scheduler"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/rancher/rke2/server/tls/server-ca.crt"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"extra-mount-0"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file0"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file1"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file2"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file3"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"file4"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:51:27Z"
    name: kube-scheduler-node1
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: node1
      uid: c4cd362a-7999-46e3-8744-b65c1581fd4e
    resourceVersion: "3858"
    uid: 894ce1f7-3528-4737-a301-3a283d14aa6b
  spec:
    containers:
    - command:
      - kube-scheduler
      - --permit-port-sharing=true
      - --address=127.0.0.1
      - --bind-address=127.0.0.1
      - --cert-dir=/var/lib/rancher/rke2/server/tls/kube-scheduler
      - --kubeconfig=/var/lib/rancher/rke2/server/cred/scheduler.kubeconfig
      - --port=10251
      - --profiling=false
      - --secure-port=10259
      env:
      - name: FILE_HASH
        value: 3693b0220aabb154179a172142e595b054e315a844556e2a6fb9aff17f5f123e
      - name: NO_PROXY
        value: .svc,.cluster.local,10.52.0.0/16,10.53.0.0/16
      image: index.docker.io/rancher/hardened-kubernetes:v1.21.7-rke2r1-build20211119
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10251
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/rancher/rke2/server/db/etcd/name
        name: file0
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/cred/scheduler.kubeconfig
        name: file1
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/client-scheduler.crt
        name: file2
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/client-scheduler.key
        name: file3
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/server-ca.crt
        name: file4
        readOnly: true
      - mountPath: /var/lib/rancher/rke2/server/tls/kube-scheduler
        name: extra-mount-0
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/rancher/rke2/server/db/etcd/name
        type: File
      name: file0
    - hostPath:
        path: /var/lib/rancher/rke2/server/cred/scheduler.kubeconfig
        type: File
      name: file1
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/client-scheduler.crt
        type: File
      name: file2
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/client-scheduler.key
        type: File
      name: file3
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/server-ca.crt
        type: File
      name: file4
    - hostPath:
        path: /var/lib/rancher/rke2/server/tls/kube-scheduler
        type: DirectoryOrCreate
      name: extra-mount-0
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:46:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:46:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://116c0d5b706a20b27a19a9cda6c95962efa550774864d21a521bd18ec5a8f33e
      image: docker.io/rancher/hardened-kubernetes:v1.21.7-rke2r1-build20211119
      imageID: sha256:853c51018f8dd6eaa2ccd0e401cb724e44cc1a6cdbd172886d96770cbc8688ff
      lastState: {}
      name: kube-scheduler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:51:17Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: Burstable
    startTime: "2022-03-06T22:46:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:47:19Z"
    generateName: rke2-canal-
    labels:
      controller-revision-hash: 57b4cd77
      k8s-app: canal
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:k8s-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5842c6da-a7e6-4f76-a25c-4eba039b31a2"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
          f:containers:
            k:{"name":"calico-node"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CALICO_DISABLE_FILE_LOGGING"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CALICO_NETWORKING_BACKEND"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CLUSTER_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DATASTORE_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_DEFAULTENDPOINTTOHOSTACTION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_FAILSAFEINBOUNDHOSTPORTS"}:
                  .: {}
                  f:name: {}
                k:{"name":"FELIX_FAILSAFEOUTBOUNDHOSTPORTS"}:
                  .: {}
                  f:name: {}
                k:{"name":"FELIX_HEALTHENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_IPTABLESBACKEND"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_IPTABLESREFRESHINTERVAL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_IPV6SUPPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_LOGSEVERITYSCREEN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_PROMETHEUSMETRICSENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FELIX_XDPENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                k:{"name":"NODENAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"USE_POD_CIDR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WAIT_FOR_DATASTORE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/xtables.lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/calico"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/calico"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/nodeagent"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-flannel"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"FLANNELD_IFACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"FLANNELD_IP_MASQ"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-flannel/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/xtables.lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"flexvol-driver"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/driver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"install-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_CONF_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_MTU"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"CNI_NETWORK_CONFIG"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef:
                      .: {}
                      f:key: {}
                      f:name: {}
                k:{"name":"KUBERNETES_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-bin-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"cni-net-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"flannel-cfg"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"flexvol-driver-host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lib-modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"policysync"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-calico"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-run-calico"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"xtables-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:47:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:47:38Z"
    name: rke2-canal-4c45f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: rke2-canal
      uid: 5842c6da-a7e6-4f76-a25c-4eba039b31a2
    resourceVersion: "3869"
    uid: 8c67111a-cac4-4202-9d79-fc14c59af406
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - node1
    containers:
    - command:
      - start_runit
      env:
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: USE_POD_CIDR
        value: "true"
      - name: WAIT_FOR_DATASTORE
        value: "true"
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CALICO_NETWORKING_BACKEND
        value: none
      - name: CLUSTER_TYPE
        value: k8s,canal
      - name: FELIX_IPTABLESREFRESHINTERVAL
        value: "60"
      - name: FELIX_IPTABLESBACKEND
        value: auto
      - name: IP
      - name: CALICO_DISABLE_FILE_LOGGING
        value: "true"
      - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
        value: ACCEPT
      - name: FELIX_IPV6SUPPORT
        value: "false"
      - name: FELIX_LOGSEVERITYSCREEN
        value: info
      - name: FELIX_HEALTHENABLED
        value: "true"
      - name: FELIX_PROMETHEUSMETRICSENABLED
        value: "true"
      - name: FELIX_XDPENABLED
        value: "false"
      - name: FELIX_FAILSAFEINBOUNDHOSTPORTS
      - name: FELIX_FAILSAFEOUTBOUNDHOSTPORTS
      image: rancher/hardened-calico:v3.20.2-build20211119
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/calico-node
          - -felix-live
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: calico-node
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /readiness
          port: 9099
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 250m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/run/nodeagent
        name: policysync
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82fhn
        readOnly: true
    - command:
      - /opt/bin/flanneld
      - --ip-masq
      - --kube-subnet-mgr
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: FLANNELD_IFACE
        valueFrom:
          configMapKeyRef:
            key: canal_iface
            name: rke2-canal-config
      - name: FLANNELD_IP_MASQ
        valueFrom:
          configMapKeyRef:
            key: masquerade
            name: rke2-canal-config
      image: rancher/hardened-flannel:v0.15.1-build20211119
      imagePullPolicy: IfNotPresent
      name: kube-flannel
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /etc/kube-flannel/
        name: flannel-cfg
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82fhn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /opt/cni/bin/install
      env:
      - name: CNI_CONF_NAME
        value: 10-canal.conflist
      - name: CNI_NETWORK_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: rke2-canal-config
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CNI_MTU
        valueFrom:
          configMapKeyRef:
            key: veth_mtu
            name: rke2-canal-config
      - name: SLEEP
        value: "false"
      image: rancher/hardened-calico:v3.20.2-build20211119
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82fhn
        readOnly: true
    - command:
      - /usr/local/bin/flexvol.sh
      - -s
      - /usr/local/bin/flexvol
      - -i
      - flexvoldriver
      image: rancher/hardened-calico:v3.20.2-build20211119
      imagePullPolicy: IfNotPresent
      name: flexvol-driver
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/driver
        name: flexvol-driver-host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82fhn
        readOnly: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2.000001e+09
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: canal
    serviceAccountName: canal
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /lib/modules
        type: "null"
      name: lib-modules
    - hostPath:
        path: /var/run/calico
        type: "null"
      name: var-run-calico
    - hostPath:
        path: /var/lib/calico
        type: "null"
      name: var-lib-calico
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - configMap:
        defaultMode: 420
        name: rke2-canal-config
      name: flannel-cfg
    - hostPath:
        path: /opt/cni/bin
        type: "null"
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: "null"
      name: cni-net-dir
    - hostPath:
        path: /var/run/nodeagent
        type: DirectoryOrCreate
      name: policysync
    - hostPath:
        path: /var/lib/kubelet/volumeplugins/nodeagent~uds
        type: DirectoryOrCreate
      name: flexvol-driver-host
    - name: kube-api-access-82fhn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0364aeaf43b262d1718c79f8e12bfbc1ac6a78b22a74df7ca7c25d17573d1664
      image: docker.io/rancher/hardened-calico:v3.20.2-build20211119
      imageID: sha256:2568133718dcc09524c6ff7f54fba5c92435c921cf5378c639c7d864bd92e40c
      lastState: {}
      name: calico-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:47:32Z"
    - containerID: containerd://b4d702b134c34126a49eb7740a5ac2bbdbe7f41d84fbbacd6206a9cb3fc6133f
      image: docker.io/rancher/hardened-flannel:v0.15.1-build20211119
      imageID: sha256:f4754f700d0993a296ac88ef9a1070e6662d9f32a627b3e0350f4ec9d82f017e
      lastState: {}
      name: kube-flannel
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:47:38Z"
    hostIP: 172.16.132.182
    initContainerStatuses:
    - containerID: containerd://0d288a72172635a9aa1fa2cf8994796b15ee661c2b2a3f88a16ae44a01616082
      image: docker.io/rancher/hardened-calico:v3.20.2-build20211119
      imageID: sha256:2568133718dcc09524c6ff7f54fba5c92435c921cf5378c639c7d864bd92e40c
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://0d288a72172635a9aa1fa2cf8994796b15ee661c2b2a3f88a16ae44a01616082
          exitCode: 0
          finishedAt: "2022-03-06T22:47:31Z"
          reason: Completed
          startedAt: "2022-03-06T22:47:29Z"
    - containerID: containerd://04f394e5b53e363c7877f4eaeeec83e714195616c9d6c96afa819b7a2f26c1ef
      image: docker.io/rancher/hardened-calico:v3.20.2-build20211119
      imageID: sha256:2568133718dcc09524c6ff7f54fba5c92435c921cf5378c639c7d864bd92e40c
      lastState: {}
      name: flexvol-driver
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://04f394e5b53e363c7877f4eaeeec83e714195616c9d6c96afa819b7a2f26c1ef
          exitCode: 0
          finishedAt: "2022-03-06T22:47:31Z"
          reason: Completed
          startedAt: "2022-03-06T22:47:31Z"
    phase: Running
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: Burstable
    startTime: "2022-03-06T22:47:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: fd478e784870b3bcf632fdec443247b0ef73afc57b80f95bb585b6aafb30c50c
      cni.projectcalico.org/containerID: 9f17a7a364cd58fc7750062ca8b5e8a2395d646c32c799e267c010800d03260b
      cni.projectcalico.org/podIP: 10.52.0.2/32
      cni.projectcalico.org/podIPs: 10.52.0.2/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.2"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.2"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
      scheduler.alpha.kubernetes.io/critical-pod: "null"
    creationTimestamp: "2022-03-06T22:47:19Z"
    generateName: rke2-coredns-rke2-coredns-5679c85bbb-
    labels:
      app.kubernetes.io/instance: rke2-coredns
      app.kubernetes.io/name: rke2-coredns
      k8s-app: kube-dns
      pod-template-hash: 5679c85bbb
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:scheduler.alpha.kubernetes.io/critical-pod: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"390838b6-3094-459d-af8d-dec76d0ee49a"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"coredns"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":53,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":53,"protocol":"UDP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/coredns"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:47:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: "2022-03-06T22:47:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:47:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:47:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.2"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:48:24Z"
    name: rke2-coredns-rke2-coredns-5679c85bbb-ph7cc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: rke2-coredns-rke2-coredns-5679c85bbb
      uid: 390838b6-3094-459d-af8d-dec76d0ee49a
    resourceVersion: "3851"
    uid: e2cf7633-acef-4515-ae54-07aa9eb5d0a9
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: k8s-app
              operator: In
              values:
              - kube-dns
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: rancher/hardened-coredns:v1.8.5-build20211119
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: udp-53
        protocol: UDP
      - containerPort: 53
        name: tcp-53
        protocol: TCP
      readinessProbe:
        failureThreshold: 5
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w7tf4
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoExecute
      key: node-role.kubernetes.io/etcd
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: rke2-coredns-rke2-coredns
      name: config-volume
    - name: kube-api-access-w7tf4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e7101960e0691e5fe71d55728a17590aa4012173a3a092a50954fe18b980cd50
      image: docker.io/rancher/hardened-coredns:v1.8.5-build20211119
      imageID: sha256:4eece06adefa5b683ddd6d5a43d41e5849665ebd43893cbaeef3a60b901eb1e4
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:47:48Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.2
    podIPs:
    - ip: 10.52.0.2
    qosClass: Guaranteed
    startTime: "2022-03-06T22:47:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/configmap: 302890d39c0765f3d9fd90a403a965cc309ed8232e87a6d6e191049b84453b92
      cni.projectcalico.org/containerID: d35f1837ff356b202ca105fd98a85855991e6bdd6dd967cbe9da4d70fe3de685
      cni.projectcalico.org/podIP: 10.52.0.3/32
      cni.projectcalico.org/podIPs: 10.52.0.3/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.3"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.3"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
      scheduler.alpha.kubernetes.io/critical-pod: "null"
      scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly", "operator":"Exists"}]'
    creationTimestamp: "2022-03-06T22:47:19Z"
    generateName: rke2-coredns-rke2-coredns-autoscaler-6889866896-
    labels:
      app.kubernetes.io/instance: rke2-coredns
      app.kubernetes.io/name: rke2-coredns-autoscaler
      k8s-app: kube-dns-autoscaler
      pod-template-hash: "6889866896"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/configmap: {}
            f:scheduler.alpha.kubernetes.io/critical-pod: {}
            f:scheduler.alpha.kubernetes.io/tolerations: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c0676de2-ce84-4b59-bf15-cf10abf62f20"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"autoscaler"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:47:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      time: "2022-03-06T22:47:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:47:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:47:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:47:54Z"
    name: rke2-coredns-rke2-coredns-autoscaler-6889866896-dn2hc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: rke2-coredns-rke2-coredns-autoscaler-6889866896
      uid: c0676de2-ce84-4b59-bf15-cf10abf62f20
    resourceVersion: "931"
    uid: 5fd98828-e6d0-4df8-aa33-5d2c73914665
  spec:
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=rke2-coredns-rke2-coredns-autoscaler
      - --target=Deployment/rke2-coredns-rke2-coredns
      - --logtostderr=true
      - --v=2
      image: rancher/hardened-cluster-autoscaler:v1.8.5-build20211119
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: autoscaler
      resources:
        limits:
          cpu: 20m
          memory: 20Mi
        requests:
          cpu: 20m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pcl67
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: rke2-coredns-rke2-coredns-autoscaler
    serviceAccountName: rke2-coredns-rke2-coredns-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoExecute
      key: node-role.kubernetes.io/etcd
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-pcl67
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b98b9efd798741efb9d5fefc8422326dc7efbca11e71d4d6475a3335561f0e64
      image: docker.io/rancher/hardened-cluster-autoscaler:v1.8.5-build20211119
      imageID: sha256:0e6424d22fd5c837b83a683f1d545c1058b00aa6cca124640591862e73df1cbc
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:47:54Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.3
    podIPs:
    - ip: 10.52.0.3
    qosClass: Guaranteed
    startTime: "2022-03-06T22:47:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:49:52Z"
    generateName: rke2-ingress-nginx-controller-
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: rke2-ingress-nginx
      app.kubernetes.io/name: rke2-ingress-nginx
      controller-revision-hash: 84ccc46865
      pod-template-generation: "2"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b7a8dc9a-0c19-464b-85cf-94e006cf7ed3"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
          f:containers:
            k:{"name":"rke2-ingress-nginx-controller"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"LD_PRELOAD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef:
                      .: {}
                      f:apiVersion: {}
                      f:fieldPath: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":80,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8444,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                  f:drop: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/usr/local/certificates/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"webhook-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:49:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.132.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:50:22Z"
    name: rke2-ingress-nginx-controller-vx265
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: rke2-ingress-nginx-controller
      uid: b7a8dc9a-0c19-464b-85cf-94e006cf7ed3
    resourceVersion: "3885"
    uid: 0dc50432-c2dd-42e2-b633-3df1e5b055be
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - node1
    containers:
    - args:
      - /nginx-ingress-controller
      - --election-id=ingress-controller-leader
      - --controller-class=k8s.io/ingress-nginx
      - --configmap=$(POD_NAMESPACE)/rke2-ingress-nginx-controller
      - --validating-webhook=:8444
      - --validating-webhook-certificate=/usr/local/certificates/cert
      - --validating-webhook-key=/usr/local/certificates/key
      - --watch-ingress-without-class=true
      - --default-ssl-certificate=cattle-system/tls-rancher-internal
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: LD_PRELOAD
        value: /usr/local/lib/libmimalloc.so
      image: rancher/nginx-ingress-controller:nginx-1.0.2-hardened2
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /wait-shutdown
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: rke2-ingress-nginx-controller
      ports:
      - containerPort: 80
        hostPort: 80
        name: http
        protocol: TCP
      - containerPort: 443
        hostPort: 443
        name: https
        protocol: TCP
      - containerPort: 8444
        hostPort: 8444
        name: webhook
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 90Mi
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        runAsUser: 101
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/local/certificates/
        name: webhook-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bh2qp
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: rke2-ingress-nginx
    serviceAccountName: rke2-ingress-nginx
    terminationGracePeriodSeconds: 300
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: webhook-cert
      secret:
        defaultMode: 420
        secretName: rke2-ingress-nginx-admission
    - name: kube-api-access-bh2qp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:49:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:49:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://369942e760d4b000b6ad08195083d4a5d3724293001a5f977d9cab64bc84507c
      image: docker.io/rancher/nginx-ingress-controller:nginx-1.0.2-hardened2
      imageID: sha256:90e7fabd3d8d0a6c057b5e7e864d39a3b59e7260594780fa9f018d96c516dc1f
      lastState: {}
      name: rke2-ingress-nginx-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:50:07Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 172.16.132.182
    podIPs:
    - ip: 172.16.132.182
    qosClass: Burstable
    startTime: "2022-03-06T22:49:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 54da2ab8034f119cb76c397fab20a6fe3dffc338a80c0a7f121281c7afe9a495
      cni.projectcalico.org/podIP: 10.52.0.7/32
      cni.projectcalico.org/podIPs: 10.52.0.7/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.7"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.7"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:47:58Z"
    generateName: rke2-metrics-server-8574659c85-
    labels:
      app: rke2-metrics-server
      pod-template-hash: 8574659c85
      release: rke2-metrics-server
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fc2edff2-107d-450e-a315-fe5e95965e96"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity: {}
          f:containers:
            k:{"name":"metrics-server"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector:
            .: {}
            f:kubernetes.io/os: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"tmp"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:47:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:47:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:47:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.7"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:48:28Z"
    name: rke2-metrics-server-8574659c85-s467p
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: rke2-metrics-server-8574659c85
      uid: fc2edff2-107d-450e-a315-fe5e95965e96
    resourceVersion: "3861"
    uid: ce5f8fcc-bd30-43a6-bba6-448cc8c09434
  spec:
    affinity: {}
    containers:
    - command:
      - /metrics-server
      - --cert-dir=/tmp
      - --logtostderr
      - --secure-port=8443
      - --kubelet-preferred-address-types=InternalIP
      image: rancher/hardened-k8s-metrics-server:v0.5.0-build20211119
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bqxwm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2.000001e+09
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: rke2-metrics-server
    serviceAccountName: rke2-metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-bqxwm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:47:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b22fff8784b0b3cb32326c69895904653f953ad62560bb32127bb9211bfa0417
      image: docker.io/rancher/hardened-k8s-metrics-server:v0.5.0-build20211119
      imageID: sha256:57533a88f34caf3f7ee320f5a2071ba5ab25dacb8bbe25d976af2aec54f4c683
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:48:02Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.7
    podIPs:
    - ip: 10.52.0.7
    qosClass: BestEffort
    startTime: "2022-03-06T22:47:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 92c736256bd082d11dbb360e135d3675709708a093f7b88b39412eca60c03e69
      cni.projectcalico.org/podIP: 10.52.0.36/32
      cni.projectcalico.org/podIPs: 10.52.0.36/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.36"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.36"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:50:37Z"
    generateName: snapshot-controller-9f68fdd9-
    labels:
      app: snapshot-controller
      pod-template-hash: 9f68fdd9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8c2b0ca4-787d-40fa-94b7-52cd32aa763c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"snapshot-controller"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:50:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:50:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.36"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:51:37Z"
    name: snapshot-controller-9f68fdd9-9qcng
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: snapshot-controller-9f68fdd9
      uid: 8c2b0ca4-787d-40fa-94b7-52cd32aa763c
    resourceVersion: "3939"
    uid: e9fe0ea9-04d3-405b-941f-6239d627b0cd
  spec:
    containers:
    - args:
      - --v=5
      - --leader-election=true
      image: k8s.gcr.io/sig-storage/snapshot-controller:v4.0.0
      imagePullPolicy: IfNotPresent
      name: snapshot-controller
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f9p4h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: snapshot-controller
    serviceAccountName: snapshot-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-f9p4h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7c4079469a8b7f0e01a2f374e489fb62e89b94994822580f7df6d662dcec0bca
      image: docker.io/csiplugin/snapshot-controller:v4.0.0
      imageID: k8s.gcr.io/sig-storage/snapshot-controller@sha256:00fcc441ea9f72899c25eed61d602272a2a58c5f0014332bdcb5ac24acef08e4
      lastState: {}
      name: snapshot-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:51:36Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.36
    podIPs:
    - ip: 10.52.0.36
    qosClass: BestEffort
    startTime: "2022-03-06T22:50:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 66b0dd3b52349e84d9f1e429be12478b0442c5b94185ba1a620bf3af353d8e43
      cni.projectcalico.org/podIP: 10.52.0.25/32
      cni.projectcalico.org/podIPs: 10.52.0.25/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.25"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "",
            "ips": [
                "10.52.0.25"
            ],
            "default": true,
            "dns": {}
        }]
      kubernetes.io/psp: global-unrestricted-psp
    creationTimestamp: "2022-03-06T22:50:37Z"
    generateName: snapshot-controller-9f68fdd9-
    labels:
      app: snapshot-controller
      pod-template-hash: 9f68fdd9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8c2b0ca4-787d-40fa-94b7-52cd32aa763c"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"snapshot-controller"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-03-06T22:50:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2022-03-06T22:50:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      time: "2022-03-06T22:50:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.25"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-03-06T22:51:37Z"
    name: snapshot-controller-9f68fdd9-tgbvv
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: snapshot-controller-9f68fdd9
      uid: 8c2b0ca4-787d-40fa-94b7-52cd32aa763c
    resourceVersion: "3943"
    uid: 9f074a0d-4370-426c-91b6-d4cd54989ed6
  spec:
    containers:
    - args:
      - --v=5
      - --leader-election=true
      image: k8s.gcr.io/sig-storage/snapshot-controller:v4.0.0
      imagePullPolicy: IfNotPresent
      name: snapshot-controller
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sp9qt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: snapshot-controller
    serviceAccountName: snapshot-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-sp9qt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:51:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2022-03-06T22:50:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8d113df1af15ad45a710536e67f9037478cca9db81638b68cb620076d8983b0d
      image: docker.io/csiplugin/snapshot-controller:v4.0.0
      imageID: k8s.gcr.io/sig-storage/snapshot-controller@sha256:00fcc441ea9f72899c25eed61d602272a2a58c5f0014332bdcb5ac24acef08e4
      lastState: {}
      name: snapshot-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-03-06T22:51:36Z"
    hostIP: 172.16.132.182
    phase: Running
    podIP: 10.52.0.25
    podIPs:
    - ip: 10.52.0.25
    qosClass: BestEffort
    startTime: "2022-03-06T22:50:38Z"
kind: List
metadata:
  resourceVersion: "14658990"
